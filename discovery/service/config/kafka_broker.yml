---
skip_properties:
  - advertised.listeners
  - num.partitions
  - listener.security.protocol.map
  - kafka.rest.client.sasl.jaas.config
  - sasl.mechanism.inter.broker.protocol
  - kafka.rest.client.security.protocol
  - kafka.rest.client.sasl.mechanism
  - group.initial.rebalance.delay.ms
  - confluent.ansible.managed
  - confluent.support.customer.id
  - num.network.threads
  - confluent.support.metrics.enable
  - log.retention.check.interval.ms
  - log.retention.hours
  - log.segment.bytes
  - metric.reporters
  - num.io.threads
  - zookeeper.connection.timeout.ms
  - socket.receive.buffer.bytes
  - socket.request.max.bytes
  - socket.send.buffer.bytes
  - confluent.security.event.logger.exporter.kafka.topic.replicas
  - zookeeper.connect
  - num.recovery.threads.per.data.dir
  - offsets.topic.replication.factor
  - transaction.state.log.min.isr
  - transaction.state.log.replication.factor
  - sasl.enabled.mechanisms
  - confluent.metrics.reporter.topic.replicas
  - confluent.metrics.reporter.sasl.jaas.config
  - confluent.metrics.reporter.sasl.mechanism
  - confluent.metrics.reporter.security.protocol
  - zookeeper.ssl.client.enable
  - zookeeper.clientCnxnSocket
  - security.providers
  - ssl.keymanager.algorithm
  - ssl.trustmanager.algorithm
  - ssl.keystore.type
  - ssl.truststore.type
  - confluent.ssl.truststore.location
  - confluent.ssl.truststore.password
  - confluent.ssl.keystore.location
  - confluent.ssl.keystore.password
  - confluent.ssl.key.password
  - listener.name.broker.ssl.key.password
  - listener.name.broker.ssl.keystore.location
  - listener.name.broker.ssl.keystore.password
  - listener.name.broker.ssl.truststore.location
  - listener.name.broker.ssl.truststore.password
  - listener.name.client.ssl.key.password
  - listener.name.client.ssl.keystore.location
  - listener.name.client.ssl.keystore.password
  - listener.name.client.ssl.truststore.location
  - listener.name.client.ssl.truststore.password
  - listener.name.internal.ssl.key.password
  - listener.name.internal.ssl.keystore.location
  - listener.name.internal.ssl.keystore.password
  - listener.name.internal.ssl.truststore.location
  - listener.name.internal.ssl.truststore.password
  - confluent.ssl.keymanager.algorithm
  - confluent.ssl.trustmanager.algorithm
  - confluent.ssl.keystore.type
  - confluent.ssl.truststore.type
  - confluent.http.server.ssl.keystore.location
  - confluent.http.server.ssl.keystore.password
  - confluent.http.server.ssl.key.password
  - confluent.http.server.ssl.truststore.location
  - confluent.http.server.ssl.truststore.password
  - confluent.http.server.ssl.keymanager.algorithm
  - confluent.http.server.ssl.trustmanager.algorithm
  - confluent.http.server.ssl.keystore.type
  - confluent.http.server.ssl.truststore.type
  - kafka.rest.resource.extension.class
  - kafka.rest.confluent.rest.auth.propogate.method
  - kafka.rest.authentication.realm
  - kafka.rest.client.ssl.truststore.location
  - kafka.rest.client.ssl.truststore.password
  - kafka.rest.client.ssl.key.password
  - kafka.rest.client.ssl.keystore.location
  - kafka.rest.client.ssl.keystore.password
  - confluent.metrics.reporter.ssl.truststore.location
  - confluent.metrics.reporter.ssl.truststore.password
  - confluent.metrics.reporter.ssl.key.password
  - confluent.metrics.reporter.ssl.keystore.location
  - confluent.metrics.reporter.ssl.keystore.password
  - confluent.authorizer.access.rule.providers
  - confluent.metadata.server.ssl.keymanager.algorithm
  - confluent.metadata.server.ssl.trustmanager.algorithm
  - confluent.metadata.server.ssl.keystore.type
  - confluent.metadata.server.ssl.truststore.type
  - confluent.metadata.server.ssl.keystore.location
  - confluent.metadata.server.ssl.keystore.password
  - confluent.metadata.server.ssl.key.password
  - confluent.metadata.server.ssl.truststore.location
  - confluent.metadata.server.ssl.truststore.password
  - confluent.metadata.server.listeners
  - confluent.metadata.server.token.max.lifetime.ms
  - confluent.metadata.server.token.signature.algorithm
  - confluent.metadata.server.authentication.method
  - kafka.rest.kafka.rest.resource.extension.class
  - kafka.rest.rest.servlet.initializor.classes
  - confluent.basic.auth.credentials.source
  - kafka.rest.rest.servlet.initializor.classes
  - kafka.rest.confluent.metadata.http.auth.credentials.provider
  - kafka.rest.confluent.metadata.ssl.truststore.location
  - kafka.rest.confluent.metadata.ssl.truststore.password
  - confluent.basic.auth.user.info
  - listener.name.internal.oauthbearer.sasl.login.callback.handler.class
  - listener.name.internal.oauthbearer.sasl.server.callback.handler.class
  - config.providers
  - config.providers.securepass.class
  - confluent.telemetry.enabled
  - confluent.telemetry.api.key
  - confluent.telemetry.api.secret
  - confluent.telemetry.proxy.url
  - confluent.telemetry.proxy.username
  - confluent.telemetry.proxy.password
  - confluent.security.event.logger.exporter.kafka.security.protocol
  - confluent.security.event.logger.exporter.kafka.ssl.key.password
  - confluent.security.event.logger.exporter.kafka.ssl.keystore.location
  - confluent.security.event.logger.exporter.kafka.ssl.keystore.password
  - confluent.security.event.logger.exporter.kafka.ssl.truststore.location
  - confluent.security.event.logger.exporter.kafka.ssl.truststore.password
  - confluent.security.event.logger.exporter.kafka.topic.create
  - confluent.metrics.reporter.sasl.kerberos.service.name
  - kafka.rest.client.sasl.kerberos.service.name
  - listener.name.broker.sasl.kerberos.service.name
  - listener.name.internal.sasl.kerberos.service.name
  - sasl.kerberos.service.name
  - confluent.http.server.http2.enabled
  - confluent.http.server.ssl.keymanager.algorithm
  - confluent.http.server.ssl.trustmanager.algorithm
  - confluent.http.server.ssl.keystore.type
  - confluent.http.server.ssl.truststore.type
  - kafka.rest.client.ssl.keymanager.algorithm
  - kafka.rest.client.ssl.keystore.type
  - kafka.rest.client.ssl.trustmanager.algorithm
  - kafka.rest.client.ssl.truststore.type
  - confluent.telemetry.exporter._local.producer.bootstrap.servers
  - confluent.security.event.router.config
  - confluent.security.event.logger.enable
  - confluent.security.event.logger.exporter.kafka.sasl.jaas.config
  - confluent.security.event.logger.exporter.kafka.sasl.login.callback.handler.class
  - confluent.security.event.logger.exporter.kafka.sasl.mechanism
  - confluent.security.event.logger.exporter.kafka.ssl.client.auth
