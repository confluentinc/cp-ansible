---
##
## The following is an example inventory file of the configuration required for setting up Confluent Platform with OAuth authorization

all:
  vars:
    ansible_connection: ssh
    ansible_user: ec2-user
    ansible_become: true
    ansible_ssh_private_key_file: /home/ec2-user/repos/ansible_collections/confluent/platform/docs/sample_inventories/cp-ansible.pem
    ansible_python_interpreter: /usr/bin/python3

    ## TLS Configuration
    ssl_enabled: true
    # sasl protocol for inter-broker communication
    sasl_protocol: plain

    # variables required to enable OAuth on all components
    auth_mode: oauth

    oauth_superuser_client_id: <superuser_client_id>
    oauth_superuser_client_password: <superuser_client_secret>
    oauth_superuser_principal: <superuser_client_principal>

    oauth_sub_claim: client_id
    oauth_groups_claim: groups
    oauth_token_uri: <idp_token_uri>
    oauth_issuer_url: <idp_issuer_url>
    oauth_jwks_uri: <idp_jwks_uri>
    oauth_expected_audience: Confluent,account,api://default

    schema_registry_oauth_user: <sr_client_id>
    schema_registry_oauth_password: <sr_client_secret>
    schema_registry_oauth_principal: <sr_client_principal>

    kafka_rest_oauth_user: <rp_client_id>
    kafka_rest_oauth_password: <rp_client_secret>
    kafka_rest_oauth_principal: <rp_client_principal>

    kafka_connect_oauth_user: <connect_client_id>
    kafka_connect_oauth_password: <connect_client_secret>
    kafka_connect_oauth_principal: <connect_client_principal>

    ksql_oauth_user: <ksql_client_id>
    ksql_oauth_password: <ksql_client_secret>
    ksql_oauth_principal: <ksql_client_principal>

    control_center_oauth_user: <c3_client_id>
    control_center_oauth_password: <c3_client_secret>
    control_center_oauth_principal: <c3_client_principal>

    # optional, needed when any additional scope is needed to include groups in the OAuth token
    oauth_groups_scope: groups
    # optional,needed when OAuth IDP server has TLS enabled with custom certificate.
    oauth_idp_cert_path: <cert_path>

    # variables to enable SSO in Control Center and confluent cli
    sso_mode: oidc
    sso_groups_claim: groups
    sso_sub_claim: sub
    sso_issuer_url: <c3_sso_issuer_url>
    sso_jwks_uri: <c3_sso_jwks_url>
    sso_authorize_uri: <c3_sso_authorize_uri>
    sso_token_uri: <c3_sso_token_uri>
    sso_device_authorization_uri: <c3_sso_device_auth_uri>
    sso_cli: true
    sso_client_id: <idp_client_id>
    sso_client_password: <idp_client_secret>

    # optional,needed when IDP server has TLS enabled with custom certificate.
    sso_idp_cert_path: <cert_path>


kafka_controller:
  hosts:
    ec2-34-219-110-48.us-west-2.compute.amazonaws.com:
    ec2-18-237-72-224.us-west-2.compute.amazonaws.com:
    ec2-35-161-39-212.us-west-2.compute.amazonaws.com:

kafka_broker:
  hosts:
    ec2-34-211-33-32.us-west-2.compute.amazonaws.com:
    ec2-35-89-77-112.us-west-2.compute.amazonaws.com:
    ec2-35-163-80-4.us-west-2.compute.amazonaws.com:

schema_registry:
  hosts:
    ec2-34-212-49-238.us-west-2.compute.amazonaws.com:

kafka_connect:
  hosts:
    ec2-35-93-21-143.us-west-2.compute.amazonaws.com:

kafka_rest:
  hosts:
    ec2-34-222-41-249.us-west-2.compute.amazonaws.com:

control_center:
  hosts:
    ec2-35-87-151-33.us-west-2.compute.amazonaws.com:
