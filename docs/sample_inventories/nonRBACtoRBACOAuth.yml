---
##
## The following is an example inventory file of the configuration required for enabling RBAC in a running CP-Ansible cluster.
## In this example, the non rbac cluster has sasl plain with tls enabled and the RBAC cluster has oauth
## You can skip step 1 if you already have a running cluster
## steps to run:
## 1. setup non rbac (sasl plain) cluster with "ansible-playbook -i <inv.yml> confluent.platform.all"
## 2. Uncomment Section 1 to enable authorization on cluster and run command "ansible-playbook -i <inv.yml> confluent.platform.all --skip-tags package --tags kafka_controller,kafka_broker -e deployment_strategy=rolling"
## 3. create ACLs for broker principal as well as user principals of all applications, including cp components. Example acls are provided in ACLs.txt. You might need to add/modify principals according to your cluster.
## 4. Uncomment Section 2 and 3 to create a custom listener, for all kafka-> cp communication and run command "ansible-playbook -i <inv.yml> confluent.platform.all --skip-tags package -e deployment_strategy=rolling"
## 5. Comment out Section 1 and Section 3 and uncomment Section 4 to add rbac with oauth variables
## 6. run command "ansible-playbook -i <inv.yml> confluent.platform.all --skip-tags package -e deployment_strategy=rolling" to enable RBAC on all components

all:
  vars:
    ansible_connection: ssh
    ansible_user: ec2-user
    ansible_become: true
    ansible_ssh_private_key_file: /home/ec2-user/guest.pem
    ansible_python_interpreter: /usr/bin/python3

    ssl_enabled: true
    sasl_protocol: plain

    ## Section 1
    # kafka_broker_custom_properties:
      #   authorizer.class.name: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      #   allow.everyone.if.no.acl.found: "true"
      #   super.users: "User:admin"

    # kafka_controller_custom_properties:
      #   authorizer.class.name: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      #   allow.everyone.if.no.acl.found: "true"
      #   super.users: "User:admin"


    ## Section 2
    #kafka_broker_custom_listeners:
        #internal_client_listener:
        #  name: CUSTOM_LISTENER
        #  port: 9095
        #  ssl_enabled: true
        #  sasl_protocol: plain


    ## Section 3
    # schema_registry_kafka_listener_name: internal_client_listener
    # kafka_connect_kafka_listener_name: internal_client_listener
    # kafka_rest_kafka_listener_name: internal_client_listener
    # ksql_kafka_listener_name: internal_client_listener
    # control_center_kafka_listener_name: internal_client_listener


    ## Section 4

    # rbac_enabled: true
    # rbac_component_additional_system_admins:
    #   - user1

    # # variables required to enable OAuth on all components
    # auth_mode: oauth
    # oauth_superuser_client_id: <superuser_client_id>
    # oauth_superuser_client_password: <superuser_client_secret>
    # oauth_sub_claim: client_id
    # oauth_groups_claim: groups
    # oauth_token_uri: <idp_token_uri>
    # oauth_issuer_url: <idp_issuer_url>
    # oauth_jwks_uri: <idp_jwks_uri>
    # oauth_expected_audience: Confluent,account,api://default
    # schema_registry_oauth_user: <sr_client_id>
    # schema_registry_oauth_password: <sr_client_secret>
    # kafka_rest_oauth_user: <rp_client_id>
    # kafka_rest_oauth_password: <rp_client_secret>
    # kafka_connect_oauth_user: <connect_client_id>
    # kafka_connect_oauth_password: <connect_client_secret>
    # control_center_oauth_user: <c3_client_id>
    # control_center_oauth_password: <c3_client_secret>

    # control_center_next_gen_oauth_user: <c3_client_id>
    # control_center_next_gen_oauth_password: <c3_client_secret>

    # # optional, needed when any additional scope is needed to include groups in the OAuth token
    # oauth_groups_scope: groups
    # # optional,needed when OAuth IDP server has TLS enabled with custom certificate.
    # oauth_idp_cert_path: <cert_path>

    # # variables to enable SSO in Control Center and confluent cli
    # sso_mode: oidc
    # sso_groups_claim: groups
    # sso_sub_claim: sub
    # sso_issuer_url: <c3_sso_issuer_url>
    # sso_jwks_uri: <c3_sso_jwks_url>
    # sso_authorize_uri: <c3_sso_authorize_uri>
    # sso_token_uri: <c3_sso_token_uri>
    # sso_device_authorization_uri: <c3_sso_device_auth_uri>
    # sso_cli: true
    # sso_client_id: <idp_client_id>
    # sso_client_password: <idp_client_secret>

    # # optional,needed when IDP server has TLS enabled with custom certificate.
    # sso_idp_cert_path: <cert_path>



kafka_controller:
  hosts:
    ec2-35-160-193-90.us-west-2.compute.amazonaws.com:
    ec2-35-85-219-150.us-west-2.compute.amazonaws.com:
    ec2-34-219-169-190.us-west-2.compute.amazonaws.com:

kafka_broker:
  hosts:
    ec2-35-91-214-11.us-west-2.compute.amazonaws.com:
    ec2-54-71-228-219.us-west-2.compute.amazonaws.com:
    ec2-54-218-9-145.us-west-2.compute.amazonaws.com:

schema_registry:
  hosts:
    ec2-35-160-193-90.us-west-2.compute.amazonaws.com:

kafka_connect:
  hosts:
    ec2-35-85-219-150.us-west-2.compute.amazonaws.com:

kafka_rest:
  hosts:
    ec2-34-219-169-190.us-west-2.compute.amazonaws.com:

ksql:
  hosts:
    ec2-35-91-214-11.us-west-2.compute.amazonaws.com:

control_center_next_gen:
  hosts:
    ec2-35-85-219-170.us-west-2.compute.amazonaws.com:
