---
- name: Validate hosts
  hosts: all
  tasks:

    - import_role:
        name: variables
      tags:
        - always

    - name: Include vars from role common
      ansible.builtin.include_vars:
        file: ../roles/common/defaults/main.yml
      tags:
        - always

    - name: Confirm Rhel Version Supported
      assert:
        that: ansible_distribution_major_version in redhat_supported_versions
        fail_msg: >-
          Rhel Version: {{ansible_distribution_major_version}} not in supported versions: {{redhat_supported_versions}}.
          To skip host validations, set validate_hosts to false.
      vars:
        redhat_supported_versions: ['7', '8', '9']
      when: ansible_os_family == "RedHat"
      tags:
        - validate_os_version

    - name: Confirm Ubuntu Version Supported
      assert:
        that: ansible_distribution_major_version in ubuntu_supported_versions
        fail_msg: >-
          Ubuntu Version: {{ansible_distribution_major_version}} not in supported versions: {{ubuntu_supported_versions}}.
          To skip host validations, set validate_hosts to false.
      vars:
        ubuntu_supported_versions: ['16', '18', '20', '22']
      when: ansible_distribution == "Ubuntu"
      tags:
        - validate_os_version

    - name: Confirm Debian Version Supported
      assert:
        that: ansible_distribution_major_version in debian_supported_versions
        fail_msg: >-
          Debian Version: {{ansible_distribution_major_version}} not in supported versions: {{debian_supported_versions}}.
          To skip host validations, set validate_hosts to false.
      vars:
        debian_supported_versions: ['9', '10']
      when: ansible_distribution == "Debian"
      tags:
        - validate_os_version

    - name: Check Internet Access for Confluent Packages/Archive
      uri:
        url: "{{confluent_common_repository_baseurl}}"
        status_code:
          - 200
          - 302
          - 307
      when: >
        ( installation_method == 'package' and repository_configuration == 'confluent') or
        ( installation_method == 'archive' and confluent_common_repository_baseurl in confluent_archive_file_source )
      ignore_errors: true
      register: internet_access_check
      tags:
        - validate_internet_access
      environment:
        http_proxy: "{% if 'http_proxy' in proxy_env %}{{proxy_env.http_proxy}}{% elif 'https_proxy' in proxy_env %}{{proxy_env.https_proxy}}{% endif %}"
        https_proxy: "{% if 'https_proxy' in proxy_env %}{{proxy_env.https_proxy}}{% elif 'http_proxy' in proxy_env %}{{proxy_env.http_proxy}}{% endif %}"


    - name: Fail Provisioning because No Network Connectivity
      fail:
        msg: >-
          Failed to connect to Package Repository at {{confluent_common_repository_baseurl}} from Host.
          Confirm network connectivity. To skip host validations, set validate_hosts to false.
      when: internet_access_check.failed | default(False)
      tags:
        - validate_internet_access

    - name: Check /tmp directory details
      stat:
        path: "/tmp"
      register: path_exists
      tags:
        - validate_tmp_access

    - name: Assert /tmp is accessible
      assert:
        that: path_exists.stat.exists
        fail_msg: >-
          "The /tmp directory is not accessible by the Ansible user.  Please update your permissions on the /tmp directory or change
          the location for temporary files in ansible.cfg."
      tags:
        - validate_tmp_access

    - name: Validate disk space usage
      debug:
        msg:  >-
          "Not enough free disk space for package installation.  Minimum space required is {{ required_disk_space_mb }}MB, please free up more disk space
            to continue installation. To skip host validations, set validate_hosts to false."
      when: (item.size_available < required_disk_space_mb|float)
      with_items: "{{ ansible_mounts }}"
      tags:
        - validate_disk_usage

    - name: Validate enough free memory for hosts
      assert:
        that: lookup('vars', 'required_total_memory_mb_' + item) < ansible_memory_mb.nocache.free
        fail_msg: >-
          "Not enough memory to run {{ item }}. Only {{ ansible_memory_mb.nocache.free }}MB of free memory detected.
          Minimum memory required is {{ lookup('vars', 'required_total_memory_mb_' + item) }} MB, please add more memory to host
          or choose a different host to install {{ item }} to continue installation."
      tags:
        - validate_memory_usage
      loop: "{{group_names}}"
