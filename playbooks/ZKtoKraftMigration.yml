---
- import_playbook: migration_precheck.yml
  tags: migrate_to_dual_write

- import_playbook: kafka_controller.yml
  tags: migrate_to_dual_write

- import_playbook: kafka_broker.yml
  vars:
    deployment_strategy: 'serial'
  tags: migrate_to_dual_write

- name: Wait for migration to complete
  hosts: kafka_controller
  tags: migrate_to_dual_write
  gather_facts: false
  tasks:
    - import_role:
        name: variables

    - name: Wait for Metadata Migration
      uri:
        url: "{{ 'https' if kafka_controller_jolokia_ssl_enabled|bool else 'http' }}://localhost:{{kafka_controller_jolokia_port}}/jolokia/read/kafka.controller:type=KafkaController,name=ZkMigrationState"
        validate_certs: false
        return_content: true
        status_code: 200
      retries: "{{ metadata_migration_retries }}"
      delay: 90
      until: ( jolokia_output.content | from_json ).value.Value == 1
      register: jolokia_output
      when: jolokia_auth_mode == "none"

    - name: Wait for Metadata Migration when Basic Jolokia auth
      uri:
        url: "{{ 'https' if kafka_controller_jolokia_ssl_enabled|bool else 'http' }}://localhost:{{kafka_controller_jolokia_port}}/jolokia/read/kafka.controller:type=KafkaController,name=ZkMigrationState"
        validate_certs: false
        return_content: true
        force_basic_auth: true
        url_username: "{{ jolokia_user }}"
        url_password: "{{ jolokia_password }}"
        status_code: 200
      retries: "{{ metadata_migration_retries }}"
      delay: 90
      until: ( jolokia_output.content | from_json ).value.Value == 1
      register: jolokia_output
      when: jolokia_auth_mode == "basic"

- name: Migrate Brokers to Kraft
  hosts: kafka_broker
  tags: migrate_to_kraft
  gather_facts: true
  tasks:
    - import_role:
        name: variables

    - name: Remove Zookeeper configs from Broker
      lineinfile:
        path: "{{ kafka_broker.config_file }}"
        state: absent
        regexp: "^{{ item }}*"
      loop:
        - zookeeper
        - inter.broker.protocol.version

    - name: Reconfigure ZK Brokers as KRaft brokers
      lineinfile:
        path: "{{ kafka_broker.config_file }}"
        line: process.roles=broker

    - name: Check if Cluster has RBAC enabled
      lineinfile:
        path: "{{ kafka_broker.config_file }}"
        regexp: 'confluent.authorizer.access.rule.providers(.*)$'
        state: absent
      register: auth_present
      when: rbac_enabled|bool

    - name: Replace ZK_ACL with KRAFT_ACL
      lineinfile:
        path: "{{ kafka_broker.config_file }}"
        line: confluent.authorizer.access.rule.providers=CONFLUENT,KRAFT_ACL
      when:
        - rbac_enabled|bool
        - auth_present.found

- name: Restart Kafka Broker
  hosts: kafka_broker
  tags: migrate_to_kraft
  gather_facts: true
  serial: '1'
  tasks:
    - include_role:
        name: kafka_broker
        tasks_from: restart_and_wait.yml
    - include_role:
        name: kafka_broker
        tasks_from: health_check.yml
      tags: health_check

- name: Take Controllers out of migration mode
  hosts: kafka_controller
  tags: migrate_to_kraft
  gather_facts: true
  tasks:
    - import_role:
        name: variables

    - name: Remove Zookeeper configs from Controller
      lineinfile:
        path: "{{ kafka_controller.config_file }}"
        state: absent
        regexp: "^{{ item }}*"
      loop:
        - zookeeper

- name: Restart Kafka Controller
  hosts: kafka_controller
  tags: migrate_to_kraft
  gather_facts: true
  serial: '1'
  tasks:
    - include_role:
        name: kafka_controller
        tasks_from: restart_and_wait.yml
    - include_role:
        name: kafka_controller
        tasks_from: health_check.yml
      when: confluent_server_enabled | default(true) | bool
      tags: health_check

- name: Check Cluster State
  hosts: kafka_controller
  tags: migrate_to_kraft
  gather_facts: false
  tasks:
    - import_role:
        name: variables

    - name: Validate Cluster is in Kraft mode
      uri:
        url: "{{ 'https' if kafka_controller_jolokia_ssl_enabled|bool else 'http' }}://localhost:{{kafka_controller_jolokia_port}}/jolokia/read/kafka.controller:type=KafkaController,name=ZkMigrationState"
        validate_certs: false
        return_content: true
        status_code: 200
      retries: "{{ metadata_migration_retries }}"
      delay: 90
      until: ( jolokia_output.content | from_json ).value.Value == 3
      register: jolokia_output
      when: jolokia_auth_mode == "none"

    - name: Validate Cluster is in Kraft mode when Basic Jolokia auth
      uri:
        url: "{{ 'https' if kafka_controller_jolokia_ssl_enabled|bool else 'http' }}://localhost:{{kafka_controller_jolokia_port}}/jolokia/read/kafka.controller:type=KafkaController,name=ZkMigrationState"
        validate_certs: false
        return_content: true
        force_basic_auth: true
        url_username: "{{ jolokia_user }}"
        url_password: "{{ jolokia_password }}"
        status_code: 200
      retries: "{{ metadata_migration_retries }}"
      delay: 90
      until: ( jolokia_output.content | from_json ).value.Value == 3
      register: jolokia_output
      when: jolokia_auth_mode == "basic"

- name: Finish Migration
  hosts: kafka_controller
  tags: migrate_to_kraft
  tasks:
    - debug:
        msg: "Migration from Zookeeper to Kraft has completed, you may shut down your Zookeeper. Please remove Zookeeper section and migration flag from your inventory file."
