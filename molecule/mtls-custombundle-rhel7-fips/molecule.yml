---
### Installation of Confluent Platform Edition on centos7.
### MTLS Enabled with custom certificates.
### Tests custom filtering properties for Secrets Protection.
### TLS is disabled for Zookeeper.
### FIPS enabled

driver:
  name: docker
platforms:
  - name: ${KRAFT_CONTROLLER:-zookeeper}1
    hostname: ${KRAFT_CONTROLLER:-zookeeper}1.confluent
    groups:
      - ${CONTROLLER_HOSTGROUP:-zookeeper}
      - ${CONTROLLER_HOSTGROUP:-zookeeper}_migration
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile-rhel7-java11.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker
      - kafka_broker_migration
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile-rhel7-java11.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker2
    hostname: kafka-broker2.confluent
    groups:
      - kafka_broker
      - kafka_broker_migration
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile-rhel7-java11.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker3
    hostname: kafka-broker3.confluent
    groups:
      - kafka_broker
      - kafka_broker_migration
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile-rhel7-java11.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: schema-registry1
    hostname: schema-registry1.confluent
    groups:
      - schema_registry
      - schema_registry_migration
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile-rhel7-java11.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-rest1
    hostname: kafka-rest1.confluent
    groups:
      - kafka_rest
      - kafka_rest_migration
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile-rhel7-java11.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-connect1
    hostname: kafka-connect1.confluent
    groups:
      - kafka_connect
      - kafka_connect_migration
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile-rhel7-java11.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ksql1
    hostname: ksql1.confluent
    groups:
      - ksql
      - ksql_migration
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile-rhel7-java11.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  # Testing colocated secrets protection
  - name: control-center1
    hostname: control-center1.confluent
    groups:
      - control_center
      - control_center_migration
      - schema_registry
      - schema_registry_migration
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile-rhel7-java11.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    published_ports:
      - "9021:9021"
    networks:
      - name: confluent
    # Cluster 2 (Kraft) goups, groupnames will be changed during converge phase
  - name: controller1-mig
    hostname: controller1-mig.confluent
    groups:
      - kafka_controller_migration
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile-rhel7-java11.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
provisioner:
  playbooks:
    converge: ${MIGRATION_CONVERGE:-../collections_converge.yml}
  inventory:
    group_vars:
      all:
        scenario_name: mtls-custombundle-rhel7-fips
        ssl_enabled: true
        fips_enabled: true
        redhat_java_package_name: java-11-openjdk

        # cert creation script does not use fqdn, which is a requirement for zk ssl
        zookeeper_ssl_enabled: false
        zookeeper_migration_ssl_enabled: false  #workaround for ZK to Kraft migration

        ssl_custom_certs: true
        ssl_ca_cert_filepath: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/generated_ssl_files/caBundle.pem"
        ssl_signed_cert_filepath: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/generated_ssl_files/{{inventory_hostname}}.chain"
        ssl_key_filepath: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/generated_ssl_files/{{inventory_hostname}}.key"
        # cert creation script does not put password on key, validates ssl try/catch
        # ssl_key_password: keypass
