---
### Validates Package version installed.
### Validates log4j configuration.
### Validates all components are running with plaintext.
### Validates that copied files are present.
### Validates that JMX exporter was copied and is running.

- name: Verify Package Version
  hosts: all
  gather_facts: false

  tasks:
    - import_role:
        name: variables

    - name: Get stats on Confluent Repo file
      stat:
        path: /etc/yum.repos.d/confluent.repo
      register: confluent_repo_file

    - name: Assert that there is no confluent repo file
      assert:
        that:
          - not confluent_repo_file.stat.exists
        quiet: true

    - name: Get stats on custom Repo file
      stat:
        path: /etc/yum.repos.d/custom-confluent.repo
      register: custom_repo_file

    - name: Assert that custom repo file exists
      assert:
        that:
          - custom_repo_file.stat.exists
        quiet: true

    - name: Set the latest version
      ansible.builtin.set_fact: latest_version="{{ confluent_package_version }}"

    - shell: "rpm -qa | grep confluent | grep {{latest_version}}"
      register: package_grep
      failed_when: "package_grep.rc == 0"
      when: confluent_package_version != latest_version

    - shell: "yum list available |grep Confluent.clients"
      register: client_package_grep
      failed_when: "client_package_grep.rc > 0"

    - name: Verify log4j conf
      import_role:
        name: confluent.test
        tasks_from: check_log4j.yml

- name: Verify - kafka_controller
  hosts: kafka_controller
  gather_facts: false
  tasks:
    - import_role:
        name: variables
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/controller/server.properties
        property: controller.quorum.voters
        expected_value: "{{ kafka_controller_quorum_voters }}"
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/controller/server.properties
        property: process.roles
        expected_value: controller
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/controller/server.properties
        property: listeners
        expected_value: "{{kafka_controller_listeners['controller']['name']}}://:{{kafka_controller_listeners['controller']['port']}}"

- name: Verify - kafka_broker
  hosts: kafka_broker
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: confluent.metrics.reporter.security.protocol
        expected_value: PLAINTEXT

    - name: Get stats on copied file
      stat:
        path: /tmp/molecule.yml
      register: copied_file

    - name: Assert copied file's permissions correct
      assert:
        that:
          - copied_file.stat.exists
          - copied_file.stat.gr_name == 'confluent'
          - copied_file.stat.pw_name == 'cp-kafka'
        quiet: true

    - name: Embedded Rest Proxy returning Cluster details
      uri:
        url: http://localhost:8090/kafka/v3/clusters
        status_code: 200
        validate_certs: false

- name: Verify - schema_registry
  hosts: schema_registry
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/schema-registry/schema-registry.properties
        property: kafkastore.security.protocol
        expected_value: PLAINTEXT

    - name: Get stats on copied file
      stat:
        path: /tmp/molecule.yml
      register: copied_file

    - name: Assert copied file's permissions correct
      assert:
        that:
          - copied_file.stat.exists
          - copied_file.stat.gr_name == 'confluent'
          - copied_file.stat.pw_name == 'cp-schema-registry'
        quiet: true

- name: Verify - kafka_rest
  hosts: kafka_rest
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka-rest/kafka-rest.properties
        property: client.security.protocol
        expected_value: PLAINTEXT

    - name: Get stats on copied file
      stat:
        path: /tmp/molecule.yml
      register: copied_file

    - name: Assert copied file's permissions correct
      assert:
        that:
          - copied_file.stat.exists
          - copied_file.stat.gr_name == 'confluent'
          - copied_file.stat.pw_name == 'cp-kafka-rest'
        quiet: true

- name: Verify - kafka_connect
  hosts: kafka_connect
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/connect-distributed.properties
        property: security.protocol
        expected_value: PLAINTEXT

    - name: Get stats on copied file
      stat:
        path: /tmp/molecule.yml
      register: copied_file

    - name: Assert copied file's permissions correct
      assert:
        that:
          - copied_file.stat.exists
          - copied_file.stat.gr_name == 'confluent'
          - copied_file.stat.pw_name == 'cp-kafka-connect'
        quiet: true

- name: Verify - ksql
  hosts: ksql
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/ksqldb/ksql-server.properties
        property: security.protocol
        expected_value: PLAINTEXT

    - name: Get stats on copied file
      stat:
        path: /tmp/molecule.yml
      register: copied_file

    - name: Assert copied file's permissions correct
      assert:
        that:
          - copied_file.stat.exists
          - copied_file.stat.gr_name == 'confluent'
          - copied_file.stat.pw_name == 'cp-ksql'
        quiet: true

- name: Verify - control_center
  hosts: control_center
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/confluent-control-center/control-center-production.properties
        property: confluent.controlcenter.streams.security.protocol
        expected_value: PLAINTEXT

    - name: Get stats on copied file
      stat:
        path: /tmp/molecule.yml
      register: copied_file

    - name: Assert copied file's permissions correct
      assert:
        that:
          - copied_file.stat.exists
          - copied_file.stat.gr_name == 'confluent'
          - copied_file.stat.pw_name == 'cp-control-center'
        quiet: true

- name: Verify - zookeeper/Controller
  hosts: zookeeper:kafka_controller
  gather_facts: false
  tasks:
    - name: Check jolokia/jmxexporter rest endpoint
      uri:
        url: "{{item}}"
        status_code: 200
      with_items:
        - "http://{{inventory_hostname}}:7770/jolokia/list"
        - "http://{{inventory_hostname}}:8079"

    - name: Get stats on first copied file
      stat:
        path: /tmp/molecule.yml
      register: copied_file

    - name: Assert first copied file's permissions correct
      assert:
        that:
          - copied_file.stat.exists
          - copied_file.stat.gr_name == 'confluent'
          - copied_file.stat.pw_name == 'cp-kafka'
          - copied_file.stat.mode == '0640'
        quiet: true

    - name: Get stats on second copied file
      stat:
        path: /tmp/molecule2.yml
      register: copied_file2

    - name: Assert second copied file's permissions correct
      assert:
        that:
          - copied_file2.stat.exists
          - copied_file2.stat.gr_name == 'confluent'
          - copied_file2.stat.pw_name == 'cp-kafka'
          - copied_file2.stat.mode == '0666'
        quiet: true

- name: Verify - kafka_broker
  hosts: kafka_broker
  gather_facts: false
  tasks:
    - name: Check jolokia/jmxexporter rest endpoint
      uri:
        url: "{{ item }}"
        status_code: 200
      with_items:
        - "http://{{inventory_hostname}}:7771/jolokia/list"
        - "http://{{inventory_hostname}}:8080"

- name: Verify - schema_registry
  hosts: schema_registry
  gather_facts: false
  tasks:
    - name: Check jolokia/jmxexporter rest endpoint
      uri:
        url: "{{ item }}"
        status_code: 200
      with_items:
        - "http://{{inventory_hostname}}:7772/jolokia/list"
        - "http://{{inventory_hostname}}:8078"

- name: Verify - kafka_connect
  hosts: kafka_connect
  gather_facts: false
  tasks:
    - name: Check jolokia/jmxexporter rest endpoint
      uri:
        url: "{{ item }}"
        status_code: 200
      with_items:
        - "http://{{inventory_hostname}}:7773/jolokia/list"
        - "http://{{inventory_hostname}}:8077"

- name: Verify - ksql
  hosts: ksql
  gather_facts: false
  tasks:
    - name: Check jolokia/jmxexporter rest endpoint
      uri:
        url: "{{ item }}"
        status_code: 200
      with_items:
        - "http://{{inventory_hostname}}:7774/jolokia/list"
        - "http://{{inventory_hostname}}:8076"

- name: Verify - kafka_rest
  hosts: kafka_rest
  gather_facts: false
  tasks:
    - name: Check jolokia/jmxexporter rest endpoint
      uri:
        url: "{{ item }}"
        status_code: 200
      with_items:
        - "http://{{inventory_hostname}}:7775/jolokia/list"
        - "http://{{inventory_hostname}}:8075"

- name: Verify - Restart Services
  import_playbook: ../../playbooks/restart.yml
