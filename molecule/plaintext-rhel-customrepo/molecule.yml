---
### Installation of Confluent Platform on RHEL8.
### Copying local JMX agent.
### Copying local files.
### Custom yum Repository

driver:
  name: docker
platforms:
  # Unset env vars resolve to the empty string
  - name: controller1
    hostname: controller1.confluent
    groups:
      - kafka_controller
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: controller2
    hostname: controller2.confluent
    groups:
      - kafka_controller
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: controller3
    hostname: controller3.confluent
    groups:
      - kafka_controller
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker2
    hostname: kafka-broker2.confluent
    groups:
      - kafka_broker
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: schema-registry1
    hostname: schema-registry1.confluent
    groups:
      - schema_registry
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-rest1
    hostname: kafka-rest1.confluent
    groups:
      - kafka_rest
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-connect1
    hostname: kafka-connect1.confluent
    groups:
      - kafka_connect
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ksql1
    hostname: ksql1.confluent
    groups:
      - ksql
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: control-center-next-gen
    hostname: control-center-next-gen.confluent
    groups:
      - control_center_next_gen
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    ## Commenting below to avoid port collision on jenkins server
    ## Uncomment to view c3 in browser at localhost:9021
    published_ports:
      - "9022:9022"
    networks:
      - name: confluent
  - name: usm-agent
    hostname: usm-agent.confluent
    groups:
      - usm_agent
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
provisioner:
  playbooks:
    converge: ../collections_converge.yml
  inventory:
    group_vars:
      all:
        control_center_next_gen_port: 9022
        control_center_next_gen_dependency_prometheus_basic_auth_enabled: true
        control_center_next_gen_dependency_alertmanager_basic_auth_enabled: true
        scenario_name: plaintext-rhel-customrepo

        repository_configuration: custom
        custom_yum_repofile_filepath: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/custom.repo"
        confluent_repository_baseurl: "https://packages.confluent.io"
        confluent_control_center_next_gen_independent_repository_baseurl: "https://packages.confluent.io/confluent-control-center-next-gen"
        confluent_usm_agent_independent_repository_baseurl: "https://nightly-packages.confluent.io/confluent-usm-agent"
        ccloud_endpoint: "https://api.us-west-2.aws.private.stag.cpdev.cloud:443"
        ccloud_environment_id: "env-stgc36r58m"
        ccloud_credential:
          username: "<api_key>"
          password: "<api_secret>"
        # Testing the copy local agents feature
        jolokia_enabled: true
        jolokia_url_remote: false
        jolokia_jar_url: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/jolokia.jar"

        jmxexporter_enabled: true
        jmxexporter_url_remote: false
        jmxexporter_jar_url: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/jmxexporter.jar"

        # Testing the copy files feature
        ksql_copy_files:
          - source_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/molecule.yml"
            destination_path: /tmp/molecule.yml
          - source_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/molecule.yml"
            destination_path: /tmp/molecule2.yml
            file_mode: '666'

        kafka_broker_copy_files: "{{ksql_copy_files}}"
        kafka_controller_copy_files: "{{ksql_copy_files}}"
        schema_registry_copy_files: "{{ksql_copy_files}}"
        kafka_connect_copy_files: "{{ksql_copy_files}}"
        kafka_rest_copy_files: "{{ksql_copy_files}}"
        control_center_next_gen_copy_files: "{{ksql_copy_files}}"
