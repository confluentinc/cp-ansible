---
### SR Automation Workflow Testing Converge Playbook - Base Template
### This template can be imported by scenario-specific converge playbooks
### Tests the complete schema registry automation workflow

- import_playbook: ../playbooks/schema_registry.yml

- name: Setup Schema Registry Automation Workflow Test
  hosts: schema_registry
  gather_facts: true
  vars:
    # Common test configuration
    test_scenario: "{{ scenario_name | default('sr_automation') }}"
    
  tasks:
    - name: Wait for Schema Registry to be ready
      uri:
        url: "{{ schema_registry_http_protocol }}://{{ inventory_hostname }}:{{ schema_registry_listener_port }}/subjects"
        method: GET
        validate_certs: false
        client_cert: "{{ ssl_file_dir_final }}/schema_registry.crt if ssl_mutual_auth_enabled | default(false) else omit }}"
        client_key: "{{ ssl_file_dir_final }}/schema_registry.key if ssl_mutual_auth_enabled | default(false) else omit }}"
        headers:
          Authorization: "{{ 'Bearer ' + oauth_token if schema_registry_oauth_enabled | default(false) else omit }}"
        status_code: 200
      retries: 10
      delay: 5
      register: sr_ready_check
      run_once: true

    - name: Create test schemas for automation workflow
      uri:
        url: "{{ schema_registry_http_protocol }}://{{ inventory_hostname }}:{{ schema_registry_listener_port }}/subjects/{{ item.subject }}/versions"
        method: POST
        validate_certs: false
        client_cert: "{{ ssl_file_dir_final }}/schema_registry.crt if ssl_mutual_auth_enabled | default(false) else omit }}"
        client_key: "{{ ssl_file_dir_final }}/schema_registry.key if ssl_mutual_auth_enabled | default(false) else omit }}"
        headers:
          Content-Type: application/vnd.schemaregistry.v1+json
          Authorization: "{{ 'Bearer ' + oauth_token if schema_registry_oauth_enabled | default(false) else omit }}"
        body_format: json
        body:
          schema: "{{ item.schema | to_json }}"
        status_code: 200
      loop:
        - subject: "test.user-value"
          schema:
            type: "record"
            name: "User"
            namespace: "test"
            fields:
              - name: "id"
                type: "long"
              - name: "username"
                type: "string"
              - name: "email"
                type: "string"
        - subject: "automation.workflow-value"
          schema:
            type: "record"
            name: "AutomationWorkflow"
            namespace: "automation"
            fields:
              - name: "workflow_id"
                type: "string"
              - name: "step"
                type: "string"
              - name: "timestamp"
                type: "long"
              - name: "status"
                type:
                  type: "enum"
                  name: "Status"
                  symbols: ["STARTED", "RUNNING", "COMPLETED", "FAILED"]
      run_once: true
      ignore_errors: true
      register: test_schema_creation

    - name: Log test schema creation results
      debug:
        msg: |
          Test schema creation results:
          {% for result in test_schema_creation.results %}
          - {{ result.item.subject }}: {{ 'SUCCESS' if result.status == 200 else 'FAILED (' + result.status|string + ')' }}
          {% endfor %}
      run_once: true

- name: Test Schema Registry Automation Workflow
  import_playbook: ../playbooks/primary_sr_switchover_cp_to_cc.yml
  vars:
    # Default to schema_exporter tag only for testing (not full switchover)
    # Override with --tags switchover_to_cc for full workflow testing
    ansible_run_tags: ["{{ test_automation_tags | default('schema_exporter') }}"]