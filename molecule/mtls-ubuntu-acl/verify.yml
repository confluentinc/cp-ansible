---
### Validates that MTLS is enabled.
### Validates mapping rules for ACLs.
### Validates ACL users.
### Validated ACL creation.

- name: Verify - kafka_controller
  hosts: kafka_controller
  gather_facts: false
  tasks:
    - import_role:
        name: variables
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/controller/server.properties
        property: controller.quorum.voters
        expected_value: "{{ kafka_controller_quorum_voters }}"
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/controller/server.properties
        property: listener.security.protocol.map
        expected_value: CONTROLLER:SSL,BROKER:SSL

- name: Verify - kafka_broker
  hosts: kafka_broker
  gather_facts: false
  tasks:
    - set_fact:
        kraft_mode: "{{ ('kafka_controller' in groups.keys() and groups['kafka_controller'] | length > 0) }}"

    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: listener.security.protocol.map
        expected_value: INTERNAL:SSL,BROKER:SSL
      when: not kraft_mode|bool
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: listener.security.protocol.map
        expected_value: CONTROLLER:SSL,INTERNAL:SSL,BROKER:SSL
      when: kraft_mode|bool
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: ssl.principal.mapping.rules
        expected_value: RULE:^.*[Cc][Nn]=([a-zA-Z0-9._-]*).*$/$1/L,DEFAULT
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: authorizer.class.name
        expected_value: kafka.security.authorizer.AclAuthorizer
      when: not kraft_mode|bool
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: authorizer.class.name
        expected_value: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      when: kraft_mode|bool

    - name: Create Kafka topic
      shell: kafka-topics --create --topic test-topic \
             --bootstrap-server kafka-broker1:9091 --command-config /etc/kafka/client.properties \
             --replication-factor 1 --partitions 6
      run_once: true
      register: output
      failed_when:
        - "'Topic test-topic already exists' not in output.stdout"
        - "'Created topic test-topic' not in output.stdout"

    - name: Create Topic Data
      shell: |
        seq 10 | kafka-console-producer --topic test-topic \
        --bootstrap-server kafka-broker1:9091 --producer.config /etc/kafka/client.properties
      run_once: true

    - name: Read Topic Data
      shell: kafka-console-consumer --topic test-topic \
             --bootstrap-server kafka-broker1:9091 --timeout-ms 10000 \
             --from-beginning --consumer.config /etc/kafka/client.properties
      run_once: true
      register: consumer_output
      failed_when:
        - "'1\n2\n3\n4\n5\n6\n7\n8\n9\n10' not in consumer_output.stdout"

    - name: Create ACL with write only permission
      shell: kafka-acls --bootstrap-server kafka-broker1:9091 --add
              --topic test-topic --allow-principal User:* --operation write
              --command-config /etc/kafka/client.properties
      run_once: true
      register: acl_output
      failed_when:
        - "'Adding ACLs for resource' not in acl_output.stdout"
        - "'Current ACLs for resource' not in acl_output.stdout"

    - name: Create Topic Data
      shell: |
        seq 5 | kafka-console-producer --topic test-topic \
        --bootstrap-server kafka-broker1:9091 --producer.config /etc/kafka/client.properties
      run_once: true

    - name: Read Topic Data
      shell: kafka-console-consumer --topic test-topic \
             --bootstrap-server kafka-broker1:9091 --timeout-ms 10000 \
             --from-beginning --consumer.config /etc/kafka/client.properties
      run_once: true
      register: consumer_output
      failed_when:
        - consumer_output.stdout != ""    # not authorized to read data

- name: Verify - schema_registry
  hosts: schema_registry
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/schema-registry/schema-registry.properties
        property: kafkastore.security.protocol
        expected_value: SSL

- name: Verify - kafka_connect
  hosts: kafka_connect
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/connect-distributed.properties
        property: security.protocol
        expected_value: SSL

- name: Verify - kafka_rest
  hosts: kafka_rest
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka-rest/kafka-rest.properties
        property: client.security.protocol
        expected_value: SSL

- name: Verify - ksql
  hosts: ksql
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/ksqldb/ksql-server.properties
        property: security.protocol
        expected_value: SSL

- name: Verify - control_center
  hosts: control_center
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/confluent-control-center/control-center-production.properties
        property: confluent.controlcenter.streams.security.protocol
        expected_value: SSL
