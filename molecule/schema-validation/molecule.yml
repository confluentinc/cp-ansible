---
### Installs Confluent Platform Cluster on Oracle Linux 8.
### RBAC enabled.
### MTLS enabled.
### Kafka Broker Customer Listener.
### SSO authentication using OIDC in Control center using Okta IdP

driver:
  name: docker
platforms:
  - name: ldap1
    hostname: ldap1.confluent
    groups:
      - ldap_server
    image: centos:centos8
    dockerfile: ../Dockerfile-centos8-base.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ${KRAFT_CONTROLLER:-zookeeper}1
    hostname: ${KRAFT_CONTROLLER:-zookeeper}1.confluent
    groups:
      - ${CONTROLLER_HOSTGROUP:-zookeeper}
      - ${CONTROLLER_HOSTGROUP:-zookeeper}_migration
    image: oraclelinux:8-slim
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ${KRAFT_CONTROLLER:-zookeeper}2
    hostname: ${KRAFT_CONTROLLER:-zookeeper}2.confluent
    groups:
      - ${CONTROLLER_HOSTGROUP:-zookeeper}
      - ${CONTROLLER_HOSTGROUP:-zookeeper}_migration
    image: oraclelinux:8-slim
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ${KRAFT_CONTROLLER:-zookeeper}3
    hostname: ${KRAFT_CONTROLLER:-zookeeper}3.confluent
    groups:
      - ${CONTROLLER_HOSTGROUP:-zookeeper}
      - ${CONTROLLER_HOSTGROUP:-zookeeper}_migration
    image: oraclelinux:8-slim
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker
      - kafka_broker_migration
    image: oraclelinux:8-slim
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker2
    hostname: kafka-broker2.confluent
    groups:
      - kafka_broker
      - kafka_broker_migration
    image: oraclelinux:8-slim
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker3
    hostname: kafka-broker3.confluent
    groups:
      - kafka_broker
      - kafka_broker_migration
    image: oraclelinux:8-slim
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: schema-registry1
    hostname: schema-registry1.confluent
    groups:
      - schema_registry
      - schema_registry_migration
    image: oraclelinux:8-slim
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: schema-registry2
    hostname: schema-registry2.confluent
    groups:
      - schema_registry
      - schema_registry_migration
    image: oraclelinux:8-slim
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-rest1
    hostname: kafka-rest1.confluent
    groups:
      - kafka_rest
      - kafka_rest_migration
    image: oraclelinux:8-slim
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-connect1
    hostname: kafka-connect1.confluent
    groups:
      - kafka_connect
      - kafka_connect_migration
    image: oraclelinux:8-slim
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  # - name: ksql1
  #   hostname: ksql1.confluent
  #   groups:
  #     - ksql
  #     - ksql_migration
  #   image: oraclelinux:8-slim
  #   dockerfile: ../Dockerfile-rhel-java17.j2
  #   command: ""
  #   volumes:
  #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
  #   privileged: true
  #   networks:
  #     - name: confluent
  - name: control-center1
    hostname: control-center1.confluent
    groups:
      - control_center
      - control_center_migration
    image: oraclelinux:8-slim
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    published_ports:
      - "9021:9021"
    networks:
      - name: confluent
provisioner:
  playbooks:
    converge: ${MIGRATION_CONVERGE:-../collections_converge.yml}
  inventory:
    group_vars:
      all:
        ssl_enabled: true
        rbac_enabled: true
        sasl_protocol: scram

        kafka_broker_custom_listeners:
          external:
            name: EXTERNAL
            port: 9092
            ssl_enabled: true
            sasl_protocol: scram
            # ssl_mutual_auth_enabled: true
            # ssl_client_authentication: requested
          broker:
            name: BROKER
            port: 9093
            ssl_enabled: true
            sasl_protocol: scram
          internal:
            name: INTERNAL
            port: 9094
            ssl_enabled: true
            sasl_protocol: oauth
          ldap:
            name: LDAP
            port: 9095
            ssl_enabled: true
            sasl_protocol: plain
          mtls:
            name: MTLS
            port: 9097
            ssl_enabled: true
            ssl_mutual_auth_enabled: true
            sasl_protocol: none

        principal_mapping_rules:
          - "RULE:.*CN=([a-zA-Z0-9.-_]*).*$$/$$1/"
          - "DEFAULT"

        # impersonation_super_users: # cert principal
        #   - 'kafka_broker'
        #   - 'kafka_rest'
        #   - 'schema_registry'
        #   - 'kafka_connect'

        # mds_ssl_client_authentication: requested

        # zookeeper_ssl_mutual_auth_enabled: false

        # # Enable mTLS on CP Components
        # schema_registry_ssl_client_authentication: requested
        # schema_registry_ssl_mutual_auth_enabled: true
        # kafka_connect_ssl_client_authentication: requested
        # kafka_connect_ssl_mutual_auth_enabled: true
        # kafka_rest_ssl_client_authentication: requested
        # kafka_rest_ssl_mutual_auth_enabled: true


        # schema_registry_kafka_listener_name: mtls
        # kafka_connect_kafka_listener_name: mtls
        # kafka_rest_kafka_listener_name: mtls
        # control_center_kafka_listener_name: mtls

        # kafka_broker_rest_proxy_mds_cert_auth_only: true
        # schema_registry_mds_cert_auth_only: true
        # kafka_connect_mds_cert_auth_only: true
        # kafka_rest_mds_cert_auth_only: true
        # control_center_mds_cert_auth_only: true

        schema_registry_custom_properties:
          authentication.roles: "**"
          authentication.skip.paths: "/*"
          confluent.schema.registry.anonymous.principal: true

        # sso_mode: oidc
        # # necessary configs in MDS server for sso in C3
        # sso_groups_claim: groups
        # sso_sub_claim: sub
        # sso_groups_scope: groups # scope is optional, depending on the Idp
        # sso_issuer_url: https://dev-59009577.okta.com/oauth2/aus96p2og3u7Cpwu65d7
        # sso_jwks_uri: https://dev-59009577.okta.com/oauth2/aus96p2og3u7Cpwu65d7/v1/keys
        # sso_authorize_uri: https://dev-59009577.okta.com/oauth2/aus96p2og3u7Cpwu65d7/v1/authorize
        # sso_token_uri: https://dev-59009577.okta.com/oauth2/aus96p2og3u7Cpwu65d7/v1/token
        # sso_client_id: ${OKTA_CLIENT:-user}
        # sso_client_password: ${OKTA_PASSWORD:-pass}

        mds_super_user: mds
        mds_super_user_password: password

        schema_registry_ldap_user: schema-registry1
        schema_registry_ldap_password: password

        kafka_connect_ldap_user: kafka-connect1
        kafka_connect_ldap_password: password

        ksql_ldap_user: ksql1
        ksql_ldap_password: password

        kafka_rest_ldap_user: kafka-rest1
        kafka_rest_ldap_password: password

        control_center_ldap_user: control-center1
        control_center_ldap_password: password

        kafka_broker_custom_properties:
          ldap.java.naming.factory.initial: com.sun.jndi.ldap.LdapCtxFactory
          ldap.com.sun.jndi.ldap.read.timeout: 3000
          ldap.java.naming.provider.url: ldap://ldap1:389
          ldap.java.naming.security.principal: uid=mds,OU=rbac,DC=example,DC=com
          ldap.java.naming.security.credentials: password
          ldap.java.naming.security.authentication: simple
          ldap.user.search.base: OU=rbac,DC=example,DC=com
          ldap.group.search.base: OU=rbac,DC=example,DC=com
          ldap.user.name.attribute: uid
          ldap.user.memberof.attribute.pattern: CN=(.*),OU=rbac,DC=example,DC=com
          ldap.group.name.attribute: cn
          ldap.group.member.attribute.pattern: CN=(.*),OU=rbac,DC=example,DC=com
          ldap.user.object.class: account
          confluent.balancer.enable: true
          allow.everyone.if.no.acl.found: false
          listener.name.ldap.plain.sasl.server.callback.handler.class: io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler

      ldap_server:
        ldaps_enabled: false
        ldaps_custom_certs: false

        ldap_admin_password: ldppassword

        ldap_rbac_group: rbac
        ldap_dc: example
        ldap_dc_extension: com

        ldap_users:
          - username: "{{schema_registry_ldap_user}}"
            password: "{{schema_registry_ldap_password}}"
            uid: 9998
            guid: 98
          - username: "{{kafka_connect_ldap_user}}"
            password: "{{kafka_connect_ldap_password}}"
            uid: 9997
            guid: 97
          - username: "{{ksql_ldap_user}}"
            password: "{{ksql_ldap_password}}"
            uid: 9996
            guid: 96
          - username: "{{control_center_ldap_user}}"
            password: "{{control_center_ldap_password}}"
            uid: 9995
            guid: 95
          - username: "{{kafka_rest_ldap_user}}"
            password: "{{kafka_rest_ldap_password}}"
            uid: 9994
            guid: 94
          - username: "{{mds_super_user}}"
            password: "{{mds_super_user_password}}"
            uid: 9993
            guid: 93
          - username: extra1
            password: extra1
            uid: 9992
            guid: 92
          - username: extra2
            password: extra2
            uid: 9991
            guid: 91
