---
### Installation of Confluent Platform on Oracle Linux 9.
### Kerberos enabled with custom client config path
### Creates a Connector in Connect cluster

driver:
  name: docker
platforms:
  - name: kerberos1
    hostname: kerberos1.confluent
    groups:
      - kerberos_server
    image: centos:centos8
    dockerfile: ../Dockerfile-centos8-base.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ${KRAFT_CONTROLLER:-zookeeper}1
    hostname: ${KRAFT_CONTROLLER:-zookeeper}1.confluent
    groups:
      - ${CONTROLLER_HOSTGROUP:-zookeeper}
      - ${CONTROLLER_HOSTGROUP:-zookeeper}_migration
    image: oraclelinux:9-slim
    dockerfile: ../Dockerfile-rhel-java8.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ${KRAFT_CONTROLLER:-zookeeper}2
    hostname: ${KRAFT_CONTROLLER:-zookeeper}2.confluent
    groups:
      - ${CONTROLLER_HOSTGROUP:-zookeeper}
      - ${CONTROLLER_HOSTGROUP:-zookeeper}_migration
    image: oraclelinux:9-slim
    dockerfile: ../Dockerfile-rhel-java8.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker
      - kafka_broker_migration
    image: oraclelinux:9-slim
    dockerfile: ../Dockerfile-rhel-java8.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker2
    hostname: kafka-broker2.confluent
    groups:
      - kafka_broker
      - kafka_broker_migration
    image: oraclelinux:9-slim
    dockerfile: ../Dockerfile-rhel-java8.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker3
    hostname: kafka-broker3.confluent
    groups:
      - kafka_broker
      - kafka_broker_migration
    image: oraclelinux:9-slim
    dockerfile: ../Dockerfile-rhel-java8.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: schema-registry1
    hostname: schema-registry1.confluent
    groups:
      - schema_registry
    image: oraclelinux:9-slim
    dockerfile: ../Dockerfile-rhel-java8.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-rest1
    hostname: kafka-rest1.confluent
    groups:
      - kafka_rest
    image: oraclelinux:9-slim
    dockerfile: ../Dockerfile-rhel-java8.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-connect1
    hostname: kafka-connect1.confluent
    groups:
      - kafka_connect
    image: oraclelinux:9-slim
    dockerfile: ../Dockerfile-rhel-java8.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ksql1
    hostname: ksql1.confluent
    groups:
      - ksql
    image: oraclelinux:9-slim
    dockerfile: ../Dockerfile-rhel-java8.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: control-center1
    hostname: control-center1.confluent
    groups:
      - control_center
    image: oraclelinux:9-slim
    dockerfile: ../Dockerfile-rhel-java8.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    published_ports:
      - "9021:9021"
    networks:
      - name: confluent
    # Cluster 2 (Kraft) goups, groupnames will be changed during converge phase
  - name: controller1-mig
    hostname: controller1-mig.confluent
    groups:
      - kafka_controller_migration
    image: oraclelinux:9-slim
    dockerfile: ../Dockerfile-rhel-java8.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: controller2-mig
    hostname: controller2-mig.confluent
    groups:
      - kafka_controller_migration
    image: oraclelinux:9-slim
    dockerfile: ../Dockerfile-rhel-java8.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
provisioner:
  playbooks:
    converge: ${MIGRATION_CONVERGE:-../collections_converge.yml}
  inventory:
    group_vars:
      all:
        scenario_name: kerberos-rhel
        sasl_protocol: kerberos,plain

        kafka_broker_custom_listeners:
          client:
            name: CLIENT
            port: 9093
            sasl_protocol: plain

        ksql_kafka_listener_name: client

        kerberos:
          realm: realm.example.com
          kdc_hostname: kerberos1
          admin_hostname: kerberos1

        kerberos_client_config_file_dest: /krb/krb5.conf

        # To run the FileStream connector, you must add the filestream-connectors path in the plugin.path
        kafka_connect_custom_properties:
          plugin.path: "/usr/share/filestream-connectors,/usr/share/java/connect_plugins"

        kafka_connect_connectors:
          - name: sample-connector-1
            config:
              connector.class: "FileStreamSinkConnector"
              tasks.max: "1"
              file: "/etc/kafka/connect-distributed.properties"
              topics: "test_topic"

      zookeeper:
        zookeeper_kerberos_principal: "zk/{{inventory_hostname}}.confluent@{{kerberos.realm | upper}}"
        zookeeper_kerberos_keytab_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/keytabs/zookeeper-{{inventory_hostname}}.keytab"
      kafka_controller:
        kafka_controller_kerberos_principal: "kafka-a/{{inventory_hostname}}.confluent@{{kerberos.realm | upper}}"
        kafka_controller_kerberos_keytab_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/keytabs/kafka_controller-{{inventory_hostname}}.keytab"
      kafka_broker:
        kafka_broker_kerberos_principal: "kafka-a/{{inventory_hostname}}.confluent@{{kerberos.realm | upper}}"
        kafka_broker_kerberos_keytab_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/keytabs/kafka_broker-{{inventory_hostname}}.keytab"
      schema_registry:
        schema_registry_kerberos_principal: "schema_registry/{{inventory_hostname}}.confluent@{{kerberos.realm | upper}}"
        schema_registry_kerberos_keytab_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/keytabs/schema_registry-{{inventory_hostname}}.keytab"
      kafka_rest:
        kafka_rest_kerberos_principal: "kafka_rest/{{inventory_hostname}}.confluent@{{kerberos.realm | upper}}"
        kafka_rest_kerberos_keytab_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/keytabs/kafka_rest-{{inventory_hostname}}.keytab"
      kafka_connect:
        kafka_connect_kerberos_principal: "kafka_connect/{{inventory_hostname}}.confluent@{{kerberos.realm | upper}}"
        kafka_connect_kerberos_keytab_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/keytabs/kafka_connect-{{inventory_hostname}}.keytab"
      ksql:
        ksql_kerberos_principal: "ksql/{{inventory_hostname}}.confluent@{{kerberos.realm | upper}}"
        ksql_kerberos_keytab_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/keytabs/ksql-{{inventory_hostname}}.keytab"
      control_center:
        control_center_kerberos_principal: "control_center/{{inventory_hostname}}.confluent@{{kerberos.realm | upper}}"
        control_center_kerberos_keytab_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/keytabs/control_center-{{inventory_hostname}}.keytab"

      kerberos_server:
        realm_name: "{{ kerberos.realm | upper }}"

        keytab_output_directory: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/keytabs"

        kerberos_principals:
          # Wish there was a better way to create this list, this will do for now
          # zookeeper keytabs and principal is not  used in Kraft mode, it will be removed once we drop zookeeper support
          - principal: "zk/zookeeper1.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/zookeeper-zookeeper1.keytab"

          - principal: "zk/zookeeper2.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/zookeeper-zookeeper2.keytab"

          - principal: "kafka-a/controller1.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/kafka_controller-controller1.keytab"

          - principal: "kafka-a/controller1-mig.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/kafka_controller-controller1-mig.keytab"

          - principal: "kafka-a/controller2.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/kafka_controller-controller2.keytab"

          - principal: "kafka-a/controller2-mig.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/kafka_controller-controller2-mig.keytab"

          - principal: "kafka-a/kafka-broker1.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/kafka_broker-kafka-broker1.keytab"

          - principal: "kafka-a/kafka-broker2.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/kafka_broker-kafka-broker2.keytab"

          - principal: "kafka-a/kafka-broker3.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/kafka_broker-kafka-broker3.keytab"

          - principal: "schema_registry/schema-registry1.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/schema_registry-schema-registry1.keytab"

          - principal: "kafka_rest/kafka-rest1.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/kafka_rest-kafka-rest1.keytab"

          - principal: "kafka_connect/kafka-connect1.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/kafka_connect-kafka-connect1.keytab"

          - principal: "ksql/ksql1.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/ksql-ksql1.keytab"

          - principal: "control_center/control-center1.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/control_center-control-center1.keytab"
