---
### Installation of Confluent Platform on Debian12.
### SASL Plain enabled.
### Control Plane listener enabled.
### Kafka Connect Confluent Hub Plugins logic (Installs jcustenborder/kafka-connect-spooldir:2.0.43).
### Custom Service Unit overrides.
### Custom log4j appender names.

driver:
  name: docker
platforms:
  - name: oauth1
    hostname: oauth1.confluent
    groups:
      - oauth_server
    image: quay.io/keycloak/keycloak:latest
    env:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME: oauth1
      KC_HTTPS_CERTIFICATE_FILE: /idp-cert.pem
      KC_HTTPS_CERTIFICATE_KEY_FILE: /idp-key.pem
      KEYCLOAK_HTTP_PORT: "8080"
      KEYCLOAK_HTTPS_PORT: "8443"
    dockerfile: ../Dockerfile-oauth.j2
    published_ports:
      - "8080:8080"
      - "8443:8443"
    command: start-dev
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: controller1
    hostname: controller1.confluent
    groups:
      - kafka_controller
    image: debian:12
    dockerfile: ../Dockerfile-debian12-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: controller2
    hostname: controller2.confluent
    groups:
      - kafka_controller
    image: debian:12
    dockerfile: ../Dockerfile-debian12-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: controller3
    hostname: controller3.confluent
    groups:
      - kafka_controller
    image: debian:12
    dockerfile: ../Dockerfile-debian12-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker
    image: debian:12
    dockerfile: ../Dockerfile-debian12-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker2
    hostname: kafka-broker2.confluent
    groups:
      - kafka_broker
    image: debian:12
    dockerfile: ../Dockerfile-debian12-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker3
    hostname: kafka-broker3.confluent
    groups:
      - kafka_broker
    image: debian:12
    dockerfile: ../Dockerfile-debian12-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: schema-registry1
    hostname: schema-registry1.confluent
    groups:
      - schema_registry
    image: debian:12
    dockerfile: ../Dockerfile-debian12-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-rest1
    hostname: kafka-rest1.confluent
    groups:
      - kafka_rest
    image: debian:12
    dockerfile: ../Dockerfile-debian12-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-connect1
    hostname: kafka-connect1.confluent
    groups:
      - kafka_connect
    image: debian:12
    dockerfile: ../Dockerfile-debian12-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ksql1
    hostname: ksql1.confluent
    groups:
      - ksql
    image: debian:12
    dockerfile: ../Dockerfile-debian12-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: control-center-next-gen
    hostname: control-center-next-gen.confluent
    groups:
      - control_center_next_gen
    image: debian:12
    dockerfile: ../Dockerfile-debian12-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    published_ports:
      - "9022:9022"
    networks:
      - name: confluent
provisioner:
  playbooks:
    converge: ../collections_converge.yml
  inventory:
    group_vars:
      all:
        control_center_next_gen_port: 9022
        control_center_next_gen_dependency_prometheus_ssl_enabled: true
        control_center_next_gen_dependency_prometheus_mtls_enabled: true
        control_center_next_gen_dependency_prometheus_basic_auth_enabled: false
        control_center_next_gen_dependency_alertmanager_ssl_enabled: true
        control_center_next_gen_dependency_alertmanager_mtls_enabled: true
        control_center_next_gen_dependency_alertmanager_basic_auth_enabled: false

        sasl_protocol: plain
        ssl_enabled: true
        keycloak_oauth_server_port: 8443
        keycloak_http_protocol: https

        auth_mode: oauth
        schema_registry_auth_mode: none # to test disabling OAuth server on one component on a non rbac cluster

        oauth_superuser_client_id: superuser
        oauth_superuser_client_password: my-secret

        oauth_sub_claim: client_id
        oauth_groups_claim: groups
        oauth_idp_cert_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/oauthcertfile.pem"
        oauth_token_uri: https://oauth1:8443/realms/cp-ansible-realm/protocol/openid-connect/token
        oauth_issuer_url: https://oauth1:8443/realms/cp-ansible-realm
        oauth_jwks_uri: https://oauth1:8443/realms/cp-ansible-realm/protocol/openid-connect/certs
        oauth_expected_audience: Confluent,account,https://my-company.com

        schema_registry_oauth_user: schema_registry
        schema_registry_oauth_password: my-secret

        kafka_rest_oauth_user: kafka_rest
        kafka_rest_oauth_password: my-secret

        kafka_connect_oauth_user: kafka_connect
        kafka_connect_oauth_password: my-secret

        control_center_next_gen_oauth_user: control_center_next_gen
        control_center_next_gen_oauth_password: my-secret

        ksql_oauth_user: ksql
        ksql_oauth_password: my-secret

        kafka_broker_custom_client_properties:
          default.api.timeout.ms: 40000

        kafka_connect_confluent_hub_plugins:
          - jcustenborder/kafka-connect-spooldir:2.0.43

        connect_s3_plugin_version: 10.3.0
        kafka_connect_plugins:
          - "/tmp/local_plugins/confluentinc-kafka-connect-gcp-functions-1.1.9.zip"
          - "/tmp/local_plugins/confluentinc-kafka-connect-azure-data-lake-gen2-storage-1.6.15.zip"
        kafka_connect_plugins_remote:
          - "https://api.hub.confluent.io/api/plugins/confluentinc/kafka-connect-s3/versions/{{connect_s3_plugin_version}}/confluentinc-kafka-connect-s3-{{connect_s3_plugin_version}}.zip"

        # To run the FileStream connector, you must add the filestream-connectors path in the plugin.path
        kafka_connect_custom_properties:
          plugin.path: "/usr/share/filestream-connectors,/usr/share/java/connect_plugins"

        kafka_connect_connector_white_list: "test_topic"
        kafka_connect_connectors:
          - name: sample-connector-1
            config:
              connector.class: "FileStreamSinkConnector"
              tasks.max: "1"
              file: "/etc/kafka/connect-distributed.properties"
              topics: "test_topic"

        kafka_controller_service_unit_overrides:
          Description: Custom Controller description

        kafka_controller_log4j_root_logger: "INFO, kafkaAppender"

        kafka_broker_service_unit_overrides:
          Description: Custom Kafka description

        kafka_broker_log4j_root_logger: "INFO, kafkaAppender"

        schema_registry_log4j_root_logger: INFO, file

        kafka_connect_service_unit_overrides:
          Description: Custom Connect description

        kafka_connect_log4j_root_logger: "INFO, connectAppender"

        kafka_rest_service_unit_overrides:
          Description: Custom Rest Proxy description

        kafka_rest_log4j_root_logger: INFO, file

        ksql_service_unit_overrides:
          Description: Custom KSQLDB description

        ksql_log4j_root_logger: INFO, main

        control_center_next_gen_service_unit_overrides:
          Description: Custom C3 description

        control_center_next_gen_log4j_root_logger: INFO, stdout, main