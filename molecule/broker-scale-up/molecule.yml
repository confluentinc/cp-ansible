---
### Installation of Confluent Platform on RHEL8.
### MTLS enabled.
### Installs Three unique Kafka Connect Clusters with unique connectors.
### Installs two unique KSQL Clusters.

driver:
  name: docker
platforms:
  - name: controller1
    hostname: controller1.confluent
    groups:
      - kafka_controller
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker
      - kafka_broker2
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker2
    hostname: kafka-broker2.confluent
    groups:
      - kafka_broker
      - kafka_broker2
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker3
    hostname: kafka-broker3.confluent
    groups:
      - kafka_broker
      - kafka_broker2
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker4
    hostname: kafka-broker4.confluent
    groups:
      - kafka_broker2
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker5
    hostname: kafka-broker5.confluent
    groups:
      - kafka_broker2
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: kafka-connect1
    hostname: kafka-connect1.confluent
    groups:
      - kafka_connect
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: ksql1
    hostname: ksql1.confluent
    groups:
      - ksql
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: control-center-next-gen
    hostname: control-center-next-gen.confluent
    groups:
      - control_center_next_gen
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    published_ports:
      - "9022:9022"
    networks:
      - name: confluent
provisioner:
  ansible_args:
    - --skip-tags=validate_memory_usage
  playbooks:
    converge: converge.yml
  inventory:
    group_vars:
      all:
        control_center_next_gen_port: 9022
        control_center_next_gen_dependency_prometheus_ssl_enabled: true
        control_center_next_gen_dependency_prometheus_mtls_enabled: true
        control_center_next_gen_dependency_prometheus_basic_auth_enabled: false
        control_center_next_gen_dependency_alertmanager_ssl_enabled: true
        control_center_next_gen_dependency_alertmanager_mtls_enabled: false
        control_center_next_gen_dependency_alertmanager_basic_auth_enabled: false

        ssl_enabled: true
        ssl_mutual_auth_enabled: true
        # Enable SBT to test whether cluster is getting balanced or not.
        kafka_broker_custom_properties:
          confluent.balancer.enable: "true"

      # connect clusters
      kafka_connect:
        kafka_connect_ssl_enabled: false
        kafka_connect_ssl_mutual_auth_enabled: false
        # To run the FileStream connector, you must add the filestream-connectors path in the plugin.path
        kafka_connect_custom_properties:
          plugin.path: "/usr/share/filestream-connectors,/usr/share/java/connect_plugins"

        kafka_connect_connectors:
          - name: sample-connector-1
            config:
              connector.class: "FileStreamSinkConnector"
              tasks.max: "1"
              file: "/etc/kafka/connect-distributed.properties"
              topics: "test_topic"
              key.converter: "org.apache.kafka.connect.json.JsonConverter"
              value.converter: "org.apache.kafka.connect.json.JsonConverter"

scenario:
  prepare_sequence:
    - create
    - prepare
  converge_sequence:
    - converge
