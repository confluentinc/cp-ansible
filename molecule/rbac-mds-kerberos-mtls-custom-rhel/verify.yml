---
### Validates that Audit logs are working on topic creation.
### Validates that keystores are in place.
### Validates that regular user cannot access topics, while super user can.
### Validates that MDS is HTTP on Cluster1 (MDS).
### Validates that all components on Cluster2 are pointing to the MDS on Cluster1.

- name: Verify Audit Logs Pt1
  hosts: kafka_broker
  gather_facts: false
  tasks:
    - name: Create Topic
      shell: |
        kafka-topics --bootstrap-server kafka-broker1:9091 \
          --command-config /etc/kafka/client.properties \
          --create --if-not-exists --topic test1
      delegate_to: kafka-broker1
      run_once: true

    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: confluent.security.event.logger.exporter.kafka.topic.replicas
        expected_value: "2"

- name: Verify - kafka_controller
  hosts: kafka_controller2
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/controller/server.properties
        property: listener.name.controller.ssl.keystore.location
        expected_value: /var/ssl/private/kafka_controller.keystore.jks

- name: Verify - kafka_broker
  hosts: kafka_broker2
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: listener.name.internal.ssl.keystore.location
        expected_value: /var/ssl/private/kafka_broker.keystore.jks

    - name: Get Kafka Cluster ID from Embedded Rest Proxy
      uri:
        url: "https://{{ inventory_hostname }}:8090/kafka/v3/clusters"
        method: GET
        validate_certs: false
        body_format: json
        return_content: true
        status_code: 200
        url_username: mds
        url_password: password
        force_basic_auth: true
      register: cluster_id_query

    - name: Parse Kafka Cluster ID from json query
      set_fact:
        kafka_cluster_id: "{{ cluster_id_query.json.data[0].cluster_id }}"

    - name: Get Topics as Regular LDAP User
      uri:
        url: "https://{{ inventory_hostname }}:8090/kafka/v3/clusters/{{kafka_cluster_id}}/topics"
        method: GET
        validate_certs: false
        body_format: json
        return_content: true
        status_code: 200
        url_username: kafka_broker
        url_password: password
        force_basic_auth: true
      register: topics_request

    - name: Assert property set as expected
      assert:
        that:
          - topics_request.json.data | length == 0
        fail_msg: "Regular user should not be able to see any topics"
        quiet: true

    - name: Get Topics as MDS Super User
      uri:
        url: "https://{{ inventory_hostname }}:8090/kafka/v3/clusters/{{kafka_cluster_id}}/topics"
        method: GET
        validate_certs: false
        body_format: json
        return_content: true
        status_code: 200
        url_username: mds
        url_password: password
        force_basic_auth: true
      register: topics_request

    - name: Assert property set as expected
      assert:
        that:
          - topics_request.json.data | length > 0
        fail_msg: "MDS Super User should be able to view many topics"
        quiet: true

- name: Verify - schema_registry
  hosts: schema_registry2
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/schema-registry/schema-registry.properties
        property: confluent.metadata.bootstrap.server.urls
        expected_value: http://mds-kafka-broker1:8090,http://mds-kafka-broker2:8090

- name: Verify - kafka_rest
  hosts: kafka_rest2
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka-rest/kafka-rest.properties
        property: confluent.metadata.bootstrap.server.urls
        expected_value: http://mds-kafka-broker1:8090,http://mds-kafka-broker2:8090

- name: Verify - kafka_connect
  hosts: kafka_connect2
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/connect-distributed.properties
        property: confluent.metadata.bootstrap.server.urls
        expected_value: http://mds-kafka-broker1:8090,http://mds-kafka-broker2:8090

- name: Verify - ksql
  hosts: ksql2
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/ksqldb/ksql-server.properties
        property: confluent.metadata.bootstrap.server.urls
        expected_value: http://mds-kafka-broker1:8090,http://mds-kafka-broker2:8090


- name: Verify - control_center
  hosts: control_center2
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/confluent-control-center/control-center-production.properties
        property: confluent.metadata.bootstrap.server.urls
        expected_value: http://mds-kafka-broker1:8090,http://mds-kafka-broker2:8090

- name: Verify Audit Logs Pt2
  hosts: kafka_broker
  gather_facts: false
  tasks:
    - name: Create Topic
      shell: |
        kafka-topics --bootstrap-server kafka-broker1:9091 \
          --command-config /etc/kafka/client.properties \
          --create --if-not-exists --topic test2
      delegate_to: kafka-broker1
      run_once: true

    - name: Consume audit logs topic
      shell: |
        timeout 10 kafka-console-consumer --bootstrap-server mds-kafka-broker1:9091 \
            --consumer.config /etc/kafka/client.properties \
            --from-beginning --topic confluent-audit-log-events
      register: output
      delegate_to: mds-kafka-broker1
      run_once: true
      failed_when: false

    - name: Assert audit log there
      assert:
        that:
          - "'\"resourceType\":\"Topic\",\"resourceName\":\"test2\"' in output.stdout"
        fail_msg: "test1 topic creation should be in audit logs topic"
        quiet: true
