---
### Installs Confluent Platform Cluster on ubi9.
### RBAC over mTLS enabled.
### File based login to C3 using overrides.

driver:
  name: docker
platforms:
  - name: ${KRAFT_CONTROLLER:-zookeeper}1
    hostname: ${KRAFT_CONTROLLER:-zookeeper}1.confluent
    groups:
      - ${CONTROLLER_HOSTGROUP:-zookeeper}
      - ${CONTROLLER_HOSTGROUP:-zookeeper}_migration
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker
      - kafka_broker_migration
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: schema-registry1
    hostname: schema-registry1.confluent
    groups:
      - schema_registry
      - schema_registry_migration
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-rest1
    hostname: kafka-rest1.confluent
    groups:
      - kafka_rest
      - kafka_rest_migration
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-connect1
    hostname: kafka-connect1.confluent
    groups:
      - kafka_connect
      - kafka_connect_migration
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
    # Cluster 2 (Kraft) goups, groupnames will be changed during converge phase
  - name: controller1-mig
    hostname: controller1-mig.confluent
    groups:
      - kafka_controller_migration
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
provisioner:
  playbooks:
    converge: ${MIGRATION_CONVERGE:-../collections_converge.yml}
  inventory:
    group_vars:
      all:
        mask_secrets: false
        ssl_enabled: true
        # ssl_client_authentication: required
        mds_ssl_client_authentication: required

        rbac_enabled: true
        auth_mode: mtls

        impersonation_super_users:
          - 'kafka_broker'
          - 'kafka_rest'
          - 'schema_registry'
          - 'kafka_connect'

        principal_mapping_rules:
          - "RULE:.*CN=([a-zA-Z0-9.-_]*).*$$/$$1/"
          - "DEFAULT"

        kafka_broker_custom_listeners:
          broker: # use old var and it should set the new one
            name: BROKER
            port: 9093
            ssl_enabled: true
            ssl_mutual_auth_enabled: true
          external1: # use old var and it should set the new one
            name: external1
            port: 9094
            ssl_enabled: true
            ssl_mutual_auth_enabled: true
          external2: # use new var and it should set the old one
            name: external2
            port: 9095
            ssl_enabled: true
            ssl_client_authentication: required
          external3: # inconsistent vars and they will become consistent and turn mtls on
            name: external3
            port: 9096
            ssl_enabled: true
            ssl_mutual_auth_enabled: true
            ssl_client_authentication: none
          external4: # inconsistent vars and they will become consistent and turn mtls on
            name: external4
            port: 9097
            ssl_enabled: true
            ssl_mutual_auth_enabled: false
            ssl_client_authentication: requested

        # to test inconsistent vars at cp component level
        schema_registry_ssl_client_authentication: required
        schema_registry_ssl_mutual_auth_enabled: false

        # to test inconsistent vars at cp component level
        kafka_connect_ssl_client_authentication: none
        kafka_connect_ssl_mutual_auth_enabled: true

        # to test turn off mtls at cp component level
        # since no global var is set it should automatically not set mtls on rest
        # kafka_rest_ssl_client_authentication: none
        # kafka_rest_ssl_mutual_auth_enabled: false
