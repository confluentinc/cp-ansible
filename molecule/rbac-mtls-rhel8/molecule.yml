---
### Installs Confluent Platform Cluster on Oracle Linux 8.
### RBAC enabled.
### MTLS enabled.
### Kafka Broker Customer Listener.
### SSO authentication using OIDC in Control center using Okta IdP

driver:
  name: docker
platforms:
  - name: ldap1
    hostname: ldap1.confluent
    groups:
      - ldap_server
    image: centos:centos8
    dockerfile: ../Dockerfile-centos8-base.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: controller1
    hostname: controller1.confluent
    groups:
      - kafka_controller
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: controller2
    hostname: controller2.confluent
    groups:
      - kafka_controller
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: controller3
    hostname: controller3.confluent
    groups:
      - kafka_controller
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker2
    hostname: kafka-broker2.confluent
    groups:
      - kafka_broker
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker3
    hostname: kafka-broker3.confluent
    groups:
      - kafka_broker
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: schema-registry1
    hostname: schema-registry1.confluent
    groups:
      - schema_registry
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-rest1
    hostname: kafka-rest1.confluent
    groups:
      - kafka_rest
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-connect1
    hostname: kafka-connect1.confluent
    groups:
      - kafka_connect
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ksql1
    hostname: ksql1.confluent
    groups:
      - ksql
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: control-center-next-gen
    hostname: control-center-next-gen.confluent
    groups:
      - control_center_next_gen
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    published_ports:
      - "9022:9022"
    networks:
      - name: confluent
  - name: usm-agent1
    hostname: usm-agent1.confluent
    groups:
      - usm_agent
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ccloud-mock-service
    hostname: ccloud-mock-service.confluent
    groups:
      - ccloud_mock
    image: 519856050701.dkr.ecr.us-west-2.amazonaws.com/docker/dev/confluentinc/usmagent-mock-ccloud:latest
    command: ""
    networks:
      - name: confluent
provisioner:
  playbooks:
    converge: ../collections_converge.yml
  inventory:
    group_vars:
      all:
        ssl_enabled: true

        control_center_next_gen_port: 9022
        control_center_next_gen_dependency_prometheus_ssl_enabled: true
        control_center_next_gen_dependency_prometheus_mtls_enabled: true
        control_center_next_gen_dependency_alertmanager_ssl_enabled: true
        control_center_next_gen_dependency_alertmanager_mtls_enabled: true

        # ssl_mutual_auth_enabled: true
        kafka_controller_ssl_mutual_auth_enabled: true
        schema_registry_ssl_mutual_auth_enabled: true
        kafka_rest_ssl_mutual_auth_enabled: true
        kafka_connect_ssl_mutual_auth_enabled: true
        ksql_ssl_mutual_auth_enabled: true
        kafka_connect_replicator_ssl_mutual_auth_enabled: true

        rbac_super_users:
          - User:C=US,ST=Ca,L=PaloAlto,O=CONFLUENT,OU=TEST,CN=kafka_broker
          - User:C=US,ST=Ca,L=PaloAlto,O=CONFLUENT,OU=TEST,CN=kafka_controller
          - User:CN=kafka_controller,OU=TEST TEAM,O=CONFLUENT,L=PaloAlto,ST=Ca,C=US
          - User:CN=kafka_broker,OU=TEST TEAM,O=CONFLUENT,L=PaloAlto,ST=Ca,C=US

        rbac_enabled: true

        sso_mode: oidc
        # necessary configs in MDS server for sso in C3
        sso_groups_claim: groups
        sso_sub_claim: sub
        sso_groups_scope: groups # scope is optional, depending on the Idp
        sso_issuer_url: https://dev-59009577.okta.com/oauth2/aus96p2og3u7Cpwu65d7
        sso_jwks_uri: https://dev-59009577.okta.com/oauth2/aus96p2og3u7Cpwu65d7/v1/keys
        sso_authorize_uri: https://dev-59009577.okta.com/oauth2/aus96p2og3u7Cpwu65d7/v1/authorize
        sso_token_uri: https://dev-59009577.okta.com/oauth2/aus96p2og3u7Cpwu65d7/v1/token
        sso_client_id: ${OKTA_CLIENT:-user}
        sso_client_password: ${OKTA_PASSWORD:-pass}

        kafka_broker_custom_listeners:
          broker:
            name: BROKER
            port: 9091
            ssl_enabled: true
            ssl_mutual_auth_enabled: false
            ssl_client_authentication: required # testing if new config works
            sasl_protocol: none
          client_listener:
            name: CLIENT
            port: 9093

        mds_super_user: mds
        mds_super_user_password: password

        schema_registry_ldap_user: schema-registry1
        schema_registry_ldap_password: password

        kafka_connect_ldap_user: kafka-connect1
        kafka_connect_ldap_password: password

        ksql_ldap_user: ksql1
        ksql_ldap_password: password

        kafka_rest_ldap_user: kafka-rest1
        kafka_rest_ldap_password: password

        control_center_next_gen_ldap_user: control-center1
        control_center_next_gen_ldap_password: password

        kafka_broker_custom_properties:
          ldap.java.naming.factory.initial: com.sun.jndi.ldap.LdapCtxFactory
          ldap.com.sun.jndi.ldap.read.timeout: 3000
          ldap.java.naming.provider.url: ldap://ldap1:389
          ldap.java.naming.security.principal: uid=mds,OU=rbac,DC=example,DC=com
          ldap.java.naming.security.credentials: password
          ldap.java.naming.security.authentication: simple
          ldap.user.search.base: OU=rbac,DC=example,DC=com
          ldap.group.search.base: OU=rbac,DC=example,DC=com
          ldap.user.name.attribute: uid
          ldap.user.memberof.attribute.pattern: CN=(.*),OU=rbac,DC=example,DC=com
          ldap.group.name.attribute: cn
          ldap.group.member.attribute.pattern: CN=(.*),OU=rbac,DC=example,DC=com
          ldap.user.object.class: account

        # USM Agent Configuration - mTLS
        usm_agent_basic_auth_enabled: false
        usm_agent_ssl_enabled: true
        usm_agent_ssl_mutual_auth_enabled: true

        # USM Agent Configuration - CCloud Mock Server
        ccloud_endpoint: http://ccloud-mock-service:8081
        ccloud_environment_id: env-mock-123
        ccloud_credential:
          username: ccloud-user
          password: ccloud-secret

      ldap_server:
        ldaps_enabled: false
        ldaps_custom_certs: false

        ldap_admin_password: ldppassword

        ldap_rbac_group: rbac
        ldap_dc: example
        ldap_dc_extension: com

        ldap_users:
          - username: "{{schema_registry_ldap_user}}"
            password: "{{schema_registry_ldap_password}}"
            uid: 9998
            guid: 98
          - username: "{{kafka_connect_ldap_user}}"
            password: "{{kafka_connect_ldap_password}}"
            uid: 9997
            guid: 97
          - username: "{{ksql_ldap_user}}"
            password: "{{ksql_ldap_password}}"
            uid: 9996
            guid: 96
          - username: "{{control_center_next_gen_ldap_user}}"
            password: "{{control_center_next_gen_ldap_password}}"
            uid: 9995
            guid: 95
          - username: "{{kafka_rest_ldap_user}}"
            password: "{{kafka_rest_ldap_password}}"
            uid: 9994
            guid: 94
          - username: "{{mds_super_user}}"
            password: "{{mds_super_user_password}}"
            uid: 9993
            guid: 93
