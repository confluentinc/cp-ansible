---
### Installation of Confluent Platform on RHEL8.
### Custom user set on each component.
### Custom log appender path on each component.
### Zookeeper, Controller and Broker co-located while migration

driver:
  name: docker
platforms:
  # Unset env vars resolve to the empty string
  - name: ${KRAFT_CONTROLLER:-zookeeper}1-kafka-broker1${JOB_BASE_NAME}${BUILD_NUMBER}
    hostname: ${KRAFT_CONTROLLER:-zookeeper}1${JOB_BASE_NAME}${BUILD_NUMBER}.confluent${JOB_BASE_NAME}${BUILD_NUMBER}
    groups:
      - ${CONTROLLER_HOSTGROUP:-zookeeper}
      - ${CONTROLLER_HOSTGROUP:-zookeeper}_migration
      - kafka_broker
      - kafka_broker_migration
      - kafka_controller_migration
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${JOB_BASE_NAME}${BUILD_NUMBER}
  - name: schema-registry1${JOB_BASE_NAME}${BUILD_NUMBER}
    hostname: schema-registry1${JOB_BASE_NAME}${BUILD_NUMBER}.confluent${JOB_BASE_NAME}${BUILD_NUMBER}
    groups:
      - schema_registry
      - schema_registry_migration
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${JOB_BASE_NAME}${BUILD_NUMBER}
  - name: kafka-rest1${JOB_BASE_NAME}${BUILD_NUMBER}
    hostname: kafka-rest1${JOB_BASE_NAME}${BUILD_NUMBER}.confluent${JOB_BASE_NAME}${BUILD_NUMBER}
    groups:
      - kafka_rest
      - kafka_rest_migration
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${JOB_BASE_NAME}${BUILD_NUMBER}
  - name: kafka-connect1${JOB_BASE_NAME}${BUILD_NUMBER}
    hostname: kafka-connect1${JOB_BASE_NAME}${BUILD_NUMBER}.confluent${JOB_BASE_NAME}${BUILD_NUMBER}
    groups:
      - kafka_connect
      - kafka_connect_migration
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${JOB_BASE_NAME}${BUILD_NUMBER}
  - name: ksql1${JOB_BASE_NAME}${BUILD_NUMBER}
    hostname: ksql1${JOB_BASE_NAME}${BUILD_NUMBER}.confluent${JOB_BASE_NAME}${BUILD_NUMBER}
    groups:
      - ksql
      - ksql_migration
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${JOB_BASE_NAME}${BUILD_NUMBER}
  - name: control-center1${JOB_BASE_NAME}${BUILD_NUMBER}
    hostname: control-center1${JOB_BASE_NAME}${BUILD_NUMBER}.confluent${JOB_BASE_NAME}${BUILD_NUMBER}
    groups:
      - control_center
      - control_center_migration
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    # Commenting below to avoid port collision on jenkins server
    # Uncomment to view c3 in browser at localhost:9021
    # published_ports:
    #  - "9021:9021"
    networks:
      - name: confluent${JOB_BASE_NAME}${BUILD_NUMBER}
provisioner:
  playbooks:
    converge: ${MIGRATION_CONVERGE:-../collections_converge.yml}
  inventory:
    group_vars:
      all:
        scenario_name: custom-user-plaintext-rhel
        ${CONTROLLER_HOSTGROUP:-zookeeper}_log_dir: /kafka/logs/
        kafka_broker_log_dir: /kafka/logs/
        schema_registry_log_dir: /kafka/logs/schemaregistry/
        kafka_rest_log_dir: /kafka/logs/kafkarest/
        ksql_log_dir: /kafka/logs/ksql/
        kafka_connect_log_dir: /kafka/logs/kafkaconnect/
        control_center_log_dir: /kafka/logs/controlcenter/
        kafka_controller_jolokia_port: 7777
      ${CONTROLLER_HOSTGROUP:-zookeeper}:
        ${CONTROLLER_HOSTGROUP:-zookeeper}_user: cp-test
        ${CONTROLLER_HOSTGROUP:-zookeeper}_group: cp-test-group
      # kafka_controller:
      #   kafka_controller_user: controller-test
      #   kafka_controller_group: cp-test-group
      kafka_broker:
        kafka_broker_user: broker-test
        kafka_broker_group: cp-test-group
      schema_registry:
        schema_registry_user: sr-custom
        schema_registry_group: sr-custom-group
      kafka_rest:
        kafka_rest_user: rest-custom
        kafka_rest_group: rest-custom-group
      ksql:
        ksql_user: ksql-custom
        ksql_group: ksql-custom-group
      kafka_connect:
        kafka_connect_user: connect-custom
        kafka_connect_group: connect-custom-group
      control_center:
        control_center_user: c3-custom
        control_center_group: c3-custom-group
