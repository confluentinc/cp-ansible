---
### Installation of Confluent Platform on Debian10.
### MTLS enabled.

driver:
  name: docker
platforms:
  - name: oauth1
    hostname: oauth1.confluent
    groups:
      - oauth_server
    image: quay.io/keycloak/keycloak:latest
    env:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME: oauth1
      KC_HTTPS_CERTIFICATE_FILE: /idp-cert.pem
      KC_HTTPS_CERTIFICATE_KEY_FILE: /idp-key.pem
      KEYCLOAK_HTTP_PORT: "8080"
      KEYCLOAK_HTTPS_PORT: "8443"
    dockerfile: ../Dockerfile-oauth.j2
    published_ports:
      - "8080:8080"
      - "8443:8443"
    command: start-dev
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: controller1
    hostname: controller1.confluent
    groups:
      - kafka_controller
    image: debian:12
    dockerfile: ../Dockerfile-debian12.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker
    image: debian:12
    dockerfile: ../Dockerfile-debian12.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker2
    hostname: kafka-broker2.confluent
    groups:
      - kafka_broker
    image: debian:12
    dockerfile: ../Dockerfile-debian12.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker3
    hostname: kafka-broker3.confluent
    groups:
      - kafka_broker
    image: debian:12
    dockerfile: ../Dockerfile-debian12.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: schema-registry1
    hostname: schema-registry1.confluent
    groups:
      - schema_registry
    image: debian:12
    dockerfile: ../Dockerfile-debian12.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: kafka-rest1
    hostname: kafka-rest1.confluent
    groups:
      - kafka_rest
    image: debian:12
    dockerfile: ../Dockerfile-debian12.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: kafka-connect1
    hostname: kafka-connect1.confluent
    groups:
      - kafka_connect
    image: debian:12
    dockerfile: ../Dockerfile-debian12.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: ksql1
    hostname: ksql1.confluent
    groups:
      - ksql
    image: debian:12
    dockerfile: ../Dockerfile-debian12.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    networks:
      - name: confluent
  - name: control-center-next-gen
    hostname: control-center-next-gen.confluent
    groups:
      - control_center_next_gen
    image: debian:12
    dockerfile: ../Dockerfile-debian12.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    published_ports:
      - "9022:9022"
    networks:
      - name: confluent
provisioner:
  playbooks:
    converge: ../collections_converge.yml
  inventory:
    group_vars:
      all:
        control_center_next_gen_port: 9022
        control_center_next_gen_dependency_prometheus_ssl_enabled: true
        control_center_next_gen_dependency_prometheus_mtls_enabled: false
        control_center_next_gen_dependency_prometheus_basic_auth_enabled: true
        control_center_next_gen_dependency_alertmanager_ssl_enabled: true
        control_center_next_gen_dependency_alertmanager_mtls_enabled: false
        control_center_next_gen_dependency_alertmanager_basic_auth_enabled: true
        scenario_name: oauth-mtls-debian
        ssl_enabled: true
        ssl_mutual_auth_enabled: true

        keycloak_oauth_server_port: 8443
        keycloak_http_protocol: https

        auth_mode: oauth
        oauth_superuser_client_id: superuser
        oauth_superuser_client_password: my-secret

        oauth_sub_claim: client_id
        oauth_groups_claim: groups
        oauth_token_uri: https://oauth1:8443/realms/cp-ansible-realm/protocol/openid-connect/token
        oauth_issuer_url: https://oauth1:8443/realms/cp-ansible-realm
        oauth_jwks_uri: https://oauth1:8443/realms/cp-ansible-realm/protocol/openid-connect/certs
        oauth_expected_audience: Confluent,account,api://default
        oauth_idp_cert_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/oauthcertfile.pem"

        schema_registry_oauth_user: schema_registry
        schema_registry_oauth_password: my-secret

        kafka_rest_oauth_user: kafka_rest
        kafka_rest_oauth_password: my-secret

        kafka_connect_oauth_user: kafka_connect
        kafka_connect_oauth_password: my-secret

        control_center_next_gen_oauth_user: control_center_next_gen
        control_center_next_gen_oauth_password: my-secret

        ksql_oauth_user: ksql
        ksql_oauth_password: my-secret

        custom_java_path: /opt/jdk21 # Use custom java 21
