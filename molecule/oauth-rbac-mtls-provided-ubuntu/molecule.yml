---
### Installs Confluent Platform Cluster on Ubuntu2404.
### RBAC enabled.
### Provided Custom Keystore and Truststore for TLS..
### MTLS enabled.
### Kafka Broker Customer Listener.
### RBAC Additional System Admin.

driver:
  name: docker
platforms:
  - name: ldap1
    hostname: ldap1.confluent
    groups:
      - ldap_server
    image: centos:centos8
    dockerfile: ../Dockerfile-centos8-base.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: oauth1
    hostname: oauth1.confluent
    groups:
      - oauth_server
    image: quay.io/keycloak/keycloak:latest
    env:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME: oauth1
      KC_HTTPS_CERTIFICATE_FILE: /idp-cert.pem
      KC_HTTPS_CERTIFICATE_KEY_FILE: /idp-key.pem
      KEYCLOAK_HTTP_PORT: "8080"
      KEYCLOAK_HTTPS_PORT: "8443"
    dockerfile: ../Dockerfile-oauth.j2
    published_ports:
      - "8080:8080"
      - "8443:8443"
    command: start-dev
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: controller1
    hostname: controller1.confluent
    groups:
      - kafka_controller
    image: geerlingguy/docker-ubuntu2404-ansible
    dockerfile: ../Dockerfile-ubuntu-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker
    image: geerlingguy/docker-ubuntu2404-ansible
    dockerfile: ../Dockerfile-ubuntu-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker2
    hostname: kafka-broker2.confluent
    groups:
      - kafka_broker
    image: geerlingguy/docker-ubuntu2404-ansible
    dockerfile: ../Dockerfile-ubuntu-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker3
    hostname: kafka-broker3.confluent
    groups:
      - kafka_broker
    image: geerlingguy/docker-ubuntu2404-ansible
    dockerfile: ../Dockerfile-ubuntu-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: schema-registry1
    hostname: schema-registry1.confluent
    groups:
      - schema_registry
    image: geerlingguy/docker-ubuntu2404-ansible
    dockerfile: ../Dockerfile-ubuntu-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-rest1
    hostname: kafka-rest1.confluent
    groups:
      - kafka_rest
    image: geerlingguy/docker-ubuntu2404-ansible
    dockerfile: ../Dockerfile-ubuntu-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-connect1
    hostname: kafka-connect1.confluent
    groups:
      - kafka_connect
    image: geerlingguy/docker-ubuntu2404-ansible
    dockerfile: ../Dockerfile-ubuntu-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ksql1
    hostname: ksql1.confluent
    groups:
      - ksql
    image: geerlingguy/docker-ubuntu2404-ansible
    dockerfile: ../Dockerfile-ubuntu-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: control-center-next-gen
    hostname: control-center-next-gen.confluent
    groups:
      - control_center_next_gen
    image: geerlingguy/docker-ubuntu2404-ansible
    dockerfile: ../Dockerfile-ubuntu-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    published_ports:
      - "9022:9022"
    networks:
      - name: confluent
  - name: usm-agent1
    hostname: usm-agent1.confluent
    groups:
      - usm_agent
    image: geerlingguy/docker-ubuntu2404-ansible
    dockerfile: ../Dockerfile-ubuntu-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ccloud-mock-service
    hostname: ccloud-mock-service.confluent
    groups:
      - ccloud_mock
    image: 519856050701.dkr.ecr.us-west-2.amazonaws.com/docker/dev/confluentinc/usmagent-mock-ccloud:latest
    command: ""
    networks:
      - name: confluent
provisioner:
  playbooks:
    converge: ../collections_converge.yml
  inventory:
    group_vars:
      all:
        scenario_name: oauth-rbac-mtls-provided-ubuntu
        ubuntu_java_package_name: openjdk-17-jdk
        rbac_super_users:
          - User:C=US,ST=Ca,L=PaloAlto,O=CONFLUENT,OU=TEST,CN=kafka_broker
          - User:C=US,ST=Ca,L=PaloAlto,O=CONFLUENT,OU=TEST,CN=kafka_controller
          - User:C=US,ST=Ca,L=PaloAlto,O=CONFLUENT,OU=TEST,CN=kafka_controller_migration
          - User:CN=kafka_broker,OU=TEST TEAM,O=CONFLUENT,L=PaloAlto,ST=Ca,C=US
          - User:CN=kafka_controller,OU=TEST TEAM,O=CONFLUENT,L=PaloAlto,ST=Ca,C=US
          - User:CN=kafka_controller_migration,OU=TEST TEAM,O=CONFLUENT,L=PaloAlto,ST=Ca,C=US

        ssl_enabled: true
        ssl_mutual_auth_enabled: true
        control_center_next_gen_port: 9022
        control_center_next_gen_dependency_prometheus_ssl_enabled: true
        control_center_next_gen_dependency_prometheus_mtls_enabled: true
        control_center_next_gen_dependency_prometheus_basic_auth_enabled: false
        control_center_next_gen_dependency_alertmanager_ssl_enabled: true
        control_center_next_gen_dependency_alertmanager_mtls_enabled: true
        control_center_next_gen_dependency_alertmanager_basic_auth_enabled: false

        ssl_provided_keystore_and_truststore: true
        ssl_keystore_filepath: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/generated_ssl_files/{{inventory_hostname}}.keystore.jks"
        ssl_keystore_key_password: keystorepass
        ssl_keystore_store_password: keystorepass
        ssl_truststore_filepath: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/generated_ssl_files/truststore.jks"
        ssl_truststore_password: truststorepass
        ssl_truststore_ca_cert_alias: CARoot

        rbac_enabled: true

        create_mds_certs: false
        token_services_public_pem_file: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/generated_ssl_files/public.pem"
        token_services_private_pem_file: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/generated_ssl_files/tokenKeypair.pem"

        keycloak_oauth_server_port: 8443
        keycloak_http_protocol: https

        auth_mode: ldap_with_oauth
        oauth_superuser_client_id: superuser
        oauth_superuser_client_password: my-secret

        oauth_sub_claim: client_id
        oauth_groups_claim: groups
        oauth_token_uri: https://oauth1:8443/realms/cp-ansible-realm/protocol/openid-connect/token
        oauth_issuer_url: https://oauth1:8443/realms/cp-ansible-realm
        oauth_jwks_uri: https://oauth1:8443/realms/cp-ansible-realm/protocol/openid-connect/certs
        oauth_expected_audience: Confluent,account,api://default
        oauth_idp_cert_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/oauthcertfile.pem"

        schema_registry_oauth_user: schema_registry
        schema_registry_oauth_password: my-secret

        kafka_rest_oauth_user: kafka_rest
        kafka_rest_oauth_password: my-secret

        kafka_connect_oauth_user: kafka_connect
        kafka_connect_oauth_password: my-secret

        control_center_next_gen_oauth_user: control_center_next_gen
        control_center_next_gen_oauth_password: my-secret

        ksql_oauth_user: ksql
        ksql_oauth_password: my-secret

        kafka_broker_custom_listeners:
          client_listener:
            name: CLIENT
            port: 9093

        mds_super_user: mds
        mds_super_user_password: password

        schema_registry_ldap_user: schema_registry
        schema_registry_ldap_password: password

        kafka_connect_ldap_user: kafka_connect
        kafka_connect_ldap_password: password

        ksql_ldap_user: ksql
        ksql_ldap_password: password

        kafka_rest_ldap_user: kafka_rest
        kafka_rest_ldap_password: password

        control_center_next_gen_ldap_user: control_center
        control_center_next_gen_ldap_password: password

        rbac_component_additional_system_admins:
          - User:user1

        # USM Agent Configuration - mTLS
        usm_agent_basic_auth_enabled: false
        usm_agent_ssl_enabled: true
        usm_agent_ssl_mutual_auth_enabled: true

        # USM Agent Configuration - CCloud Mock Server
        ccloud_endpoint: http://ccloud-mock-service:8081
        ccloud_environment_id: env-mock-123
        ccloud_credential:
          username: ccloud-user
          password: ccloud-secret

      kafka_broker:
        ldap_config: |
          ldap.java.naming.factory.initial=com.sun.jndi.ldap.LdapCtxFactory
          ldap.com.sun.jndi.ldap.read.timeout=3000
          ldap.java.naming.provider.url=ldaps://ldap1:636
          ldap.java.naming.security.protocol=SSL
          ldap.ssl.truststore.location=/var/ssl/private/kafka_broker.truststore.jks
          ldap.ssl.truststore.password=truststorepass
          ldap.java.naming.security.principal=uid=mds,OU=rbac,DC=example,DC=com
          ldap.java.naming.security.credentials=password
          ldap.java.naming.security.authentication=simple
          ldap.user.search.base=OU=rbac,DC=example,DC=com
          ldap.group.search.base=OU=rbac,DC=example,DC=com
          ldap.user.name.attribute=uid
          ldap.user.memberof.attribute.pattern=CN=(.*),OU=rbac,DC=example,DC=com
          ldap.group.name.attribute=cn
          ldap.group.member.attribute.pattern=CN=(.*),OU=rbac,DC=example,DC=com
          ldap.user.object.class=account


      ksql:
        auth_mode: ldap

      ldap_server:
        ldaps_enabled: true
        ldaps_custom_certs: true
        ssl_custom_certs: true
        ssl_ca_cert_filepath: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/generated_ssl_files/ca.crt"
        ssl_signed_cert_filepath: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/generated_ssl_files/{{inventory_hostname}}-ca1-signed.crt"
        ssl_key_filepath: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/generated_ssl_files/{{inventory_hostname}}-key.pem"

        ldap_admin_password: ldppassword

        ldap_rbac_group: rbac
        ldap_dc: example
        ldap_dc_extension: com

        ldap_users:
          - username: "{{schema_registry_ldap_user}}"
            password: "{{schema_registry_ldap_password}}"
            uid: 9998
            guid: 98
          - username: "{{kafka_connect_ldap_user}}"
            password: "{{kafka_connect_ldap_password}}"
            uid: 9997
            guid: 97
          - username: "{{ksql_ldap_user}}"
            password: "{{ksql_ldap_password}}"
            uid: 9996
            guid: 96
          - username: "{{control_center_next_gen_ldap_user}}"
            password: "{{control_center_next_gen_ldap_password}}"
            uid: 9995
            guid: 95
          - username: "{{kafka_rest_ldap_user}}"
            password: "{{kafka_rest_ldap_password}}"
            uid: 9994
            guid: 94
          - username: "{{mds_super_user}}"
            password: "{{mds_super_user_password}}"
            uid: 9993
            guid: 93
          - username: user1
            password: user1p
            uid: 9992
            guid: 92
