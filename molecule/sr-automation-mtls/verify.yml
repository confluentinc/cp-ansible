---
### SR Automation Workflow Verification - mTLS
### Imports base verification and adds mTLS specific checks

- import_playbook: ../base_templates/sr_automation_verify_base.yml

- name: mTLS Specific Verification
  hosts: schema_registry
  gather_facts: false
  tasks:
    - name: Verify mTLS certificate files exist
      stat:
        path: "{{ item }}"
      register: mtls_cert_files_check
      loop:
        - "{{ ssl_file_dir_final }}/schema_registry.crt"
        - "{{ ssl_file_dir_final }}/schema_registry.key"
        - "{{ ssl_file_dir_final }}/ca.crt"
      when: ssl_mutual_auth_enabled | default(false)
      tags: mtls

    - name: Verify all mTLS certificate files present
      assert:
        that:
          - item.stat.exists
        fail_msg: "Required mTLS certificate file missing: {{ item.item }}"
      loop: "{{ mtls_cert_files_check.results }}"
      when:
        - ssl_mutual_auth_enabled | default(false)
        - mtls_cert_files_check is defined
      tags: mtls

    - name: Test mTLS client certificate authentication
      uri:
        url: "{{ schema_registry_http_protocol }}://{{ inventory_hostname }}:{{ schema_registry_listener_port }}/subjects"
        method: GET
        validate_certs: false
        client_cert: "{{ ssl_file_dir_final }}/schema_registry.crt"
        client_key: "{{ ssl_file_dir_final }}/schema_registry.key"
        status_code: 200
      register: mtls_auth_test
      when: ssl_mutual_auth_enabled | default(false)
      tags: mtls

    - name: Verify mTLS authentication requirement
      uri:
        url: "{{ schema_registry_http_protocol }}://{{ inventory_hostname }}:{{ schema_registry_listener_port }}/subjects"
        method: GET
        validate_certs: false
        # No client certificate provided - should fail
        status_code: [401, 403, 400]
      register: mtls_no_cert_test
      when: ssl_mutual_auth_enabled | default(false)
      tags: mtls

    - name: Display mTLS verification summary
      debug:
        msg: |
          âœ“ mTLS SR Automation Verification Complete:
          - Certificate files: {{ 'ALL PRESENT' if (mtls_cert_files_check.results | selectattr('stat.exists') | list | length == 3) else 'MISSING' }}
          - Client cert auth: {{ 'WORKING' if mtls_auth_test is succeeded else 'FAILED' }}
          - Auth requirement: {{ 'ENFORCED' if mtls_no_cert_test.status in [401, 403, 400] else 'NOT_ENFORCED' }}
          - Security level: Mutual TLS authentication
          - Automation features: Ready for certificate-based authentication
      tags: mtls
