---
### Validates keystore is present across all components.
### Validates that ldap is configured.
### Validates that Confluent Balancer is enabled.
### Validates total number of clusters for user2.
### Validates truststore across all components.
### Validates OIDC authenticate api for SSO in Control Center
### Validates that FIPS is in use in OpenSSL.

- name: Verify - kafka_broker
  hosts: kafka_broker
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: confluent.metadata.server.ssl.keystore.location
        expected_value: /var/ssl/private/kafka_broker.keystore.bcfks

    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: ldap.java.naming.factory.initial
        expected_value: com.sun.jndi.ldap.LdapCtxFactory

    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: transaction.state.log.min.isr
        expected_value: "2"

    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: confluent.balancer.enable
        expected_value: "true"

    - name: Get Clusters associated with user1
      uri:
        url: "https://{{groups['kafka_broker'][0]}}:8090/security/1.0/lookup/managed/clusters/principal/User:user1"
        validate_certs: false
        force_basic_auth: true
        url_username: "{{mds_super_user}}"
        url_password: "{{mds_super_user_password}}"
      register: clusters
      run_once: true

    - name: Assert cluster count expected
      assert:
        that:
          - clusters.json|length == 4
        fail_msg: "There should only be four clusters in {{clusters.json}}"
        quiet: true

    - name: Get Clusters associated with user2
      uri:
        url: "https://{{groups['kafka_broker'][0]}}:8090/security/1.0/lookup/managed/clusters/principal/User:user2"
        validate_certs: false
        force_basic_auth: true
        url_username: "{{mds_super_user}}"
        url_password: "{{mds_super_user_password}}"
      register: clusters
      run_once: true

    - name: Assert cluster count expected
      assert:
        that:
          - clusters.json|length == 1
        fail_msg: "There should only be for clusters in {{clusters.json}}"
        quiet: true

    - name: Test TLS version used in certificate
      shell: openssl s_client -connect {{inventory_hostname}}:9091 </dev/null 2>/dev/null  | grep 'Protocol  :' | sed 's/^.*:\ //'
      register: tls_version

    - fail:
        msg: "TLS version is {{tls_version}}, it should be >=1.2"
      when: tls_version is version('TLSv1.2', '<')

    - name: Check FIPS in OpenSSL
      shell: openssl md5 <<< "123"
      register: openssl_out
      failed_when: openssl_out.rc == 0

- name: Verify - schema_registry
  hosts: schema_registry
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/schema-registry/schema-registry.properties
        property: ssl.truststore.location
        expected_value: /var/ssl/private/schema_registry.truststore.jks

- name: Verify - kafka_rest
  hosts: kafka_rest
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka-rest/kafka-rest.properties
        property: ssl.truststore.location
        expected_value: /var/ssl/private/kafka_rest.truststore.jks

- name: Verify - kafka_connect
  hosts: kafka_connect
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/connect-distributed.properties
        property: ssl.truststore.location
        expected_value: /var/ssl/private/kafka_connect.truststore.jks

- name: Verify - ksql
  hosts: ksql
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/ksqldb/ksql-server.properties
        property: ssl.truststore.location
        expected_value: /var/ssl/private/ksql.truststore.jks


- name: Verify - control_center
  hosts: control_center
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/confluent-control-center/control-center-production.properties
        property: confluent.controlcenter.streams.ssl.truststore.location
        expected_value: /var/ssl/private/control_center.truststore.jks
    - name: Check status of Authenticate api
      uri:
        url: "https://control-center1:9021/api/metadata/security/1.0/oidc/authenticate?caller=https://control-center1:9021/api/metadata"
        validate_certs: false
        follow_redirects: none
        status_code: 302
      register: sso
