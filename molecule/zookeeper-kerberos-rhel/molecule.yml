---
### Installs Confluent Platform on centos8
### Enables Kerberos on Zookeeper.
### SASL SCRAM enabled on all components except Zookeeper.

driver:
  name: docker
platforms:
  - name: kerberos1
    hostname: kerberos1.confluent
    groups:
      - kerberos_server
    image: geerlingguy/docker-centos7-ansible
    dockerfile: ../Dockerfile.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: zookeeper1
    hostname: zookeeper1.confluent
    groups:
      - zookeeper
    image: geerlingguy/docker-centos8-ansible
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: zookeeper2
    hostname: zookeeper2.confluent
    groups:
      - zookeeper
    image: geerlingguy/docker-centos8-ansible
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: zookeeper3
    hostname: zookeeper3.confluent
    groups:
      - zookeeper
    image: geerlingguy/docker-centos8-ansible
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker
    image: geerlingguy/docker-centos8-ansible
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker2
    hostname: kafka-broker2.confluent
    groups:
      - kafka_broker
    image: geerlingguy/docker-centos8-ansible
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker3
    hostname: kafka-broker3.confluent
    groups:
      - kafka_broker
    image: geerlingguy/docker-centos8-ansible
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: schema-registry1
    hostname: schema-registry1.confluent
    groups:
      - schema_registry
    image: geerlingguy/docker-centos8-ansible
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
provisioner:
  playbooks:
    prepare: ../kerberos.yml
  inventory:
    group_vars:
      all:
        scenario_name: zookeeper-kerberos-rhel

        zookeeper_quorum_authentication_type: none # kerberos not supported in Server - Server authentication
        zookeeper_client_authentication_type: kerberos
        sasl_protocol: scram

        kerberos_kafka_broker_primary: kafka
        kerberos:
          realm: realm.example.com
          kdc_hostname: kerberos1
          admin_hostname: kerberos1

      zookeeper:
        zookeeper_kerberos_principal: "zookeeper/{{inventory_hostname}}.confluent@{{kerberos.realm | upper}}"
        zookeeper_kerberos_keytab_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/keytabs/zookeeper-{{inventory_hostname}}.keytab"

      kafka_broker:
        kafka_broker_kerberos_principal: "{{kerberos_kafka_broker_primary}}/{{inventory_hostname}}.confluent@{{kerberos.realm | upper}}"
        kafka_broker_kerberos_keytab_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/keytabs/kafka_broker-{{inventory_hostname}}.keytab"

        kafka_broker_custom_java_args: "-Dsun.security.krb5.debug=true"

      schema_registry:
        schema_registry_kerberos_principal: "schema_registry/{{inventory_hostname}}.confluent@{{kerberos.realm | upper}}"
        schema_registry_kerberos_keytab_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/keytabs/schema_registry-{{inventory_hostname}}.keytab"

      kerberos_server:
        realm_name: "{{ kerberos.realm | upper }}"

        keytab_output_directory: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/keytabs"

        kerberos_principals:
          - principal: "zookeeper/zookeeper1.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/zookeeper-zookeeper1.keytab"

          - principal: "zookeeper/zookeeper2.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/zookeeper-zookeeper2.keytab"

          - principal: "zookeeper/zookeeper3.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/zookeeper-zookeeper3.keytab"

          - principal: "{{kerberos_kafka_broker_primary}}/kafka-broker1.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/kafka_broker-kafka-broker1.keytab"

          - principal: "{{kerberos_kafka_broker_primary}}/kafka-broker2.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/kafka_broker-kafka-broker2.keytab"

          - principal: "{{kerberos_kafka_broker_primary}}/kafka-broker3.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/kafka_broker-kafka-broker3.keytab"

          - principal: "schema_registry/schema-registry1.confluent@{{kerberos.realm | upper}}"
            keytab_path: "keytabs/schema_registry-schema-registry1.keytab"
