---
### Validates that each component has a unique auth user.
### Validates that Rest Proxy has correct auth property.
### Validates that Java 17 is in Use

- name: Verify Java
  hosts: all
  gather_facts: false
  tasks:
    - name: Get Java Version
      shell: java -version
      register: version_output

    - name: Assert Java Version is 17
      assert:
        that:
          - version_output.stderr_lines[0] | regex_search("17\.0\.")
        fail_msg: "Current Java Version is: {{version_output.stderr_lines[0]}}. Verify again"
        quiet: true

- name: Verify - kafka_controller
  hosts: kafka_controller
  gather_facts: false
  tasks:
    - import_role:
        name: variables
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/controller/server.properties
        property: controller.quorum.voters
        expected_value: "{{ kafka_controller_quorum_voters }}"
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/controller/server.properties
        property: process.roles
        expected_value: controller
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/controller/server.properties
        property: listeners
        expected_value: "{{kafka_controller_listeners['controller']['name']}}://:{{kafka_controller_listeners['controller']['port']}}"

- name: Verify - kafka_broker
  hosts: kafka_broker
  gather_facts: false
  tasks:
    - name: Check authentication roles contains unique list, from all users
      import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: kafka.rest.authentication.roles
        expected_value: admin,client

- name: Verify - schema_registry
  hosts: schema_registry
  gather_facts: false
  tasks:
    - name: Check authentication roles contains unique list, from all users
      import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/schema-registry/schema-registry.properties
        property: authentication.roles
        expected_value: admin,client,developer

- name: Verify - kafka_connect
  hosts: kafka_connect
  gather_facts: false
  tasks:
    - name: Check SR Connection properties
      import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/connect-distributed.properties
        property: value.converter.schema.registry.basic.auth.user.info
        expected_value: admin:admin-secret

    - name: Check Rest Extension Class property
      import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/connect-distributed.properties
        property: rest.extension.classes
        expected_value: org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension

    - name: Load connect-password.properties
      slurp:
        src: /etc/kafka/connect-password.properties
      register: slurped_properties

    - name: Assert property set as expected
      assert:
        that:
          - slurped_properties.content|b64decode == "user1: password\n"
        fail_msg: "Password file: {{slurped_properties.content|b64decode}} should be 'user1: password\n'"

- name: Verify - ksql
  hosts: ksql
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/ksqldb/ksql-server.properties
        property: authentication.roles
        expected_value: user1,client

- name: Verify - kafka_rest
  hosts: kafka_rest
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka-rest/kafka-rest.properties
        property: authentication.roles
        expected_value: admin,client

- name: Verify - control_center
  hosts: control_center
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/confluent-control-center/control-center-production.properties
        property: confluent.controlcenter.rest.authentication.roles
        expected_value: admin,client,Restricted
