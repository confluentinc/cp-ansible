---
### Installs Confluent Platform Cluster on ubi9.
### RBAC over mTLS enabled.
### File based login to C3 using overrides.

driver:
  name: docker
platforms:
  - name: ${KRAFT_CONTROLLER:-zookeeper}1
    hostname: ${KRAFT_CONTROLLER:-zookeeper}1.confluent
    groups:
      - ${CONTROLLER_HOSTGROUP:-zookeeper}
      - ${CONTROLLER_HOSTGROUP:-zookeeper}_migration
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-broker1
    hostname: kafka-broker1.confluent
    groups:
      - kafka_broker
      - kafka_broker_migration
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: schema-registry1
    hostname: schema-registry1.confluent
    groups:
      - schema_registry
      - schema_registry_migration
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-rest1
    hostname: kafka-rest1.confluent
    groups:
      - kafka_rest
      - kafka_rest_migration
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: kafka-connect1
    hostname: kafka-connect1.confluent
    groups:
      - kafka_connect
      - kafka_connect_migration
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: ksql1
    hostname: ksql1.confluent
    groups:
      - ksql
      - ksql_migration
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: control-center1
    hostname: control-center1.confluent
    groups:
      - control_center
      - control_center_migration
    image: redhat/ubi9-minimal
    published_ports:
      - "9021:9021"
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
    # Cluster 2 (Kraft) goups, groupnames will be changed during converge phase
  - name: controller1-mig
    hostname: controller1-mig.confluent
    groups:
      - kafka_controller_migration
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: controller2-mig
    hostname: controller2-mig.confluent
    groups:
      - kafka_controller_migration
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
  - name: controller3-mig
    hostname: controller3-mig.confluent
    groups:
      - kafka_controller_migration
    image: redhat/ubi9-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent
provisioner:
  playbooks:
    converge: ${MIGRATION_CONVERGE:-../collections_converge.yml}
  inventory:
    group_vars:
      all:
        mask_secrets: false
        ssl_enabled: true
        ssl_client_authentication: required
        mds_ssl_client_authentication: required

        rbac_enabled: true
        auth_mode: mtls

        impersonation_super_users:
          - 'kafka_broker'
          - 'kafka_rest'
          - 'schema_registry'
          - 'kafka_connect'

        principal_mapping_rules:
          - "RULE:.*CN=([a-zA-Z0-9.-_]*).*$$/$$1/"
          - "DEFAULT"

        control_center_additional_system_admins:
          - c3user # from file user

        kafka_broker_custom_properties:
          confluent.metadata.server.user.store: FILE
          confluent.metadata.server.user.store.file.path: /tmp/credentials

        control_center_kafka_listener_name: internal_token
        # control_center_custom_properties:
        #   confluent.controlcenter.streams.bootstrap.servers: kafka-broker1:9088
        #   confluent.controlcenter.streams.sasl.mechanism: OAUTHBEARER
        #   confluent.controlcenter.streams.security.protocol: SASL_SSL
        #   confluent.controlcenter.streams.sasl.login.callback.handler.class: io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
        #   confluent.controlcenter.streams.sasl.jaas.config: org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required username="c3user" clientSecret="c3password" metadataServerUrls="https://kafka-broker1:8090";
        #   confluent.controlcenter.streams.ssl.key.password: confluentkeystorestorepass
        #   confluent.controlcenter.streams.ssl.keystore.location: /var/ssl/private/control_center.keystore.jks
        #   confluent.controlcenter.streams.ssl.keystore.password: confluentkeystorestorepass
        #   confluent.controlcenter.streams.ssl.truststore.location: /var/ssl/private/control_center.truststore.jks
        #   confluent.controlcenter.streams.ssl.truststore.password:  confluenttruststorepass

        kafka_connect_custom_properties:
          plugin.path: "/usr/share/filestream-connectors,/usr/share/java/connect_plugins"

        kafka_connect_connector_white_list: "test_topic"
        kafka_connect_connectors:
          - name: sample-connector-1
            config:
              connector.class: "FileStreamSinkConnector"
              tasks.max: "1"
              file: "/etc/kafka/connect-distributed.properties"
              topics: "test_topic"
