---
### Validates that protocol is set to SSl across all components.

- name: Verify - kafka_broker
  hosts: kafka_broker
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: listener.security.protocol.map
        expected_value: INTERNAL:SSL,BROKER:SSL

- name: Verify - schema_registry
  hosts: schema_registry
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/schema-registry/schema-registry.properties
        property: kafkastore.security.protocol
        expected_value: SSL

- name: Verify - kafka_connect
  hosts: kafka_connect
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/connect-distributed.properties
        property: security.protocol
        expected_value: SSL

- name: Verify - kafka_rest
  hosts: kafka_rest
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka-rest/kafka-rest.properties
        property: client.security.protocol
        expected_value: SSL

- name: Verify - ksql
  hosts: ksql
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/ksqldb/ksql-server.properties
        property: security.protocol
        expected_value: SSL

- name: Verify - control_center
  hosts: control_center
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/confluent-control-center/control-center-production.properties
        property: confluent.controlcenter.streams.security.protocol
        expected_value: SSL


    # Verify Jolokia is accessible and access control is working for Controller
- name: Test Jolokia Controller Endpoint Accessibility
  uri:
    url: "{{ 'https' if kafka_controller_jolokia_ssl_enabled|bool else 'http' }}://localhost:{{ kafka_controller_jolokia_port }}/jolokia/read/kafka.controller:type=KafkaController,name=ZkMigrationState"
    validate_certs: false
    return_content: true
  register: jolokia_controller_access
  when: kafka_controller_jolokia_enabled|bool
  failed_when: false

- name: Verify Controller Jolokia is accessible
  assert:
    that:
      - jolokia_controller_access.status is defined
      - jolokia_controller_access.status != -1
    fail_msg: "Controller Jolokia endpoint is not accessible (status: {{ jolokia_controller_access.status | default('undefined') }}). Check if jolokia is enabled and running."
    success_msg: "Controller Jolokia endpoint is accessible"
  when: kafka_controller_jolokia_enabled|bool

- name: Verify Controller Jolokia allows ZkMigrationState access (when access control enabled)
  assert:
    that:
      - jolokia_controller_access.status == 200
    fail_msg: "Controller should allow access to ZkMigrationState mbean when access control is properly configured"
    success_msg: "Controller Jolokia access control is working - ZkMigrationState is accessible"
  when: kafka_controller_jolokia_enabled|bool and kafka_controller_jolokia_access_control_enabled|bool and jolokia_controller_access.status is defined

# Test that random MBeans are blocked by access control
- name: Test Jolokia Controller Random MBean Access (should be blocked)
  uri:
    url: "{{ 'https' if kafka_controller_jolokia_ssl_enabled|bool else 'http' }}://localhost:{{ kafka_controller_jolokia_port }}/jolokia/read/java.lang:type=Memory"
    validate_certs: false
    return_content: true
  register: jolokia_controller_random_mbean
  when: kafka_controller_jolokia_enabled|bool and kafka_controller_jolokia_access_control_enabled|bool
  failed_when: false

- name: Verify Controller Jolokia blocks random MBean access (when access control enabled)
  assert:
    that:
      - jolokia_controller_random_mbean.status == 403 or jolokia_controller_random_mbean.status == 401
    fail_msg: "Controller should block access to random MBeans when access control is enabled (got status: {{ jolokia_controller_random_mbean.status | default('undefined') }}). Access control may not be working properly."
    success_msg: "Controller Jolokia access control is working - random MBean access is properly blocked"
  when: kafka_controller_jolokia_enabled|bool and kafka_controller_jolokia_access_control_enabled|bool and jolokia_controller_random_mbean.status is defined
