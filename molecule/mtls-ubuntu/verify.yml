---
### Validates that protocol is set to SSl across all components.

- name: Verify - kafka_controller
  hosts: kafka_controller
  gather_facts: false
  tasks:
    - import_role:
        name: variables
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/controller/server.properties
        property: controller.quorum.voters
        expected_value: "{{ kafka_controller_quorum_voters }}"
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/controller/server.properties
        property: listener.security.protocol.map
        expected_value: CONTROLLER:SSL,BROKER:SSL

    # Verify Jolokia Access Control is working for Controller
    - name: Test Jolokia Access Control - Attempt to access restricted mbean (should fail)
      uri:
        url: "{{ 'https' if kafka_controller_jolokia_ssl_enabled|bool else 'http' }}://localhost:{{ kafka_controller_jolokia_port }}/jolokia/read/kafka.controller:type=KafkaController,name=ZkMigrationState"
        method: GET
        status_code: 403
      register: jolokia_restricted_access
      when: kafka_controller_jolokia_access_control_enabled|bool
      ignore_errors: true

    - name: Verify Jolokia Access Control is blocking unauthorized access
      assert:
        that:
          - jolokia_restricted_access.status == 403
        fail_msg: "Jolokia access control should block unauthorized mbean access with 403 status"
        success_msg: "Jolokia access control is properly blocking unauthorized access"
      when: kafka_controller_jolokia_access_control_enabled|bool

- name: Verify - kafka_broker
  hosts: kafka_broker
  gather_facts: false
  tasks:
    - set_fact:
        kraft_mode: "{{ ('kafka_controller' in groups.keys() and groups['kafka_controller'] | length > 0) }}"

    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: listener.security.protocol.map
        expected_value: INTERNAL:SSL,BROKER:SSL
      when: not kraft_mode|bool
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/server.properties
        property: listener.security.protocol.map
        expected_value: CONTROLLER:SSL,INTERNAL:SSL,BROKER:SSL
      when: kraft_mode|bool

    # Verify Jolokia Access Control is working for Broker
    - name: Test Jolokia Access Control - Attempt to access restricted mbean (should fail)
      uri:
        url: "{{ 'https' if kafka_broker_jolokia_ssl_enabled|bool else 'http' }}://localhost:{{ kafka_broker_jolokia_port }}/jolokia/read/kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec"
        method: GET
        status_code: 403
      register: jolokia_broker_restricted_access
      when: kafka_broker_jolokia_access_control_enabled|bool
      ignore_errors: true

    - name: Verify Jolokia Access Control is blocking unauthorized access for Broker
      assert:
        that:
          - jolokia_broker_restricted_access.status == 403
        fail_msg: "Jolokia access control should block unauthorized mbean access with 403 status"
        success_msg: "Jolokia access control is properly blocking unauthorized access for Broker"
      when: kafka_broker_jolokia_access_control_enabled|bool

- name: Verify - schema_registry
  hosts: schema_registry
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/schema-registry/schema-registry.properties
        property: kafkastore.security.protocol
        expected_value: SSL

- name: Verify - kafka_connect
  hosts: kafka_connect
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka/connect-distributed.properties
        property: security.protocol
        expected_value: SSL

- name: Verify - kafka_rest
  hosts: kafka_rest
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/kafka-rest/kafka-rest.properties
        property: client.security.protocol
        expected_value: SSL

- name: Verify - ksql
  hosts: ksql
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/ksqldb/ksql-server.properties
        property: security.protocol
        expected_value: SSL

- name: Verify - control_center
  hosts: control_center
  gather_facts: false
  tasks:
    - import_role:
        name: confluent.test
        tasks_from: check_property.yml
      vars:
        file_path: /etc/confluent-control-center/control-center-production.properties
        property: confluent.controlcenter.streams.security.protocol
        expected_value: SSL
