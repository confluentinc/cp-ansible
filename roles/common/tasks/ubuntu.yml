---
- name: Install apt-transport-https
  apt:
    name: apt-transport-https
    update_cache: true
  register: install_apt_transport_result
  until: install_apt_transport_result is success  or ansible_check_mode
  retries: 5
  delay: 90
  tags: package

- name: Install gnupg for gpg-keys
  apt:
    name: gnupg2
  register: install_gnupg_result
  until: install_gnupg_result is success  or ansible_check_mode
  retries: 5
  delay: 90
  tags: package

- name: Install python3-debian for deb822_repository module
  apt:
    name: python3-debian
  register: install_python_debian_result
  until: install_python_debian_result is success or ansible_check_mode
  retries: 5
  delay: 90
  tags: package

- name: Add Confluent Clients Repository using deb822_repository
  ansible.builtin.deb822_repository:
    name: confluent-clients
    types:
      - deb
    uris:
      - "{{ confluent_clients_repository_baseurl }}/clients/deb"
    suites:
      - stable # Use stable instead of version-specific to avoid unsupported versions
    components:
      - main
    signed_by: "{{ confluent_common_repository_debian_clients_key_url }}" # This should be a URL to the GPG key
    state: present
  when:
    - repository_configuration == 'confluent'
    - installation_method == "package"
  tags: package

- name: Add Confluent Common Repository using deb822_repository
  ansible.builtin.deb822_repository:
    name: confluent-common
    types:
      - deb
    uris:
      - "{{ confluent_common_repository_baseurl }}/deb/{{ confluent_common_repository_debian_release_version }}"
    suites:
      - stable
    components:
      - main
    signed_by: "{{ confluent_common_repository_debian_key_url }}" # This should be a URL to the GPG key
    state: present
  when:
    - repository_configuration == 'confluent'
    - installation_method == "package"
  tags: package

- name: Update apt cache after repository configuration
  apt:
    update_cache: true
  when:
    - repository_configuration == 'confluent'
    - installation_method == "package"
  tags: package

- name: Clean up temporary key files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /tmp/confluent-common-archive-keyring.gpg.tmp
    - /tmp/confluent-cc-archive-keyring.gpg.tmp
    - /tmp/confluent-clients-archive-keyring.gpg.tmp
  when:
    - repository_configuration == 'confluent'
    - installation_method == "package"

- name: Make Sure man pages Directory Exists
  file:
    path: /usr/share/man/man1
    state: directory
    mode: "755"

- name: Custom Java Install
  include_tasks: custom_java_install.yml

- name: Add open JDK repo
  apt_repository:
    repo: "{{ubuntu_java_repository}}"
  #Throttle was introduced to help mitigate the APT Lock when deploying multiple components to the same node.
  throttle: 1
  register: apt_add_jdk_result
  until: apt_add_jdk_result is success
  retries: 5
  delay: 90
  when:
    - repository_configuration == 'confluent'
    - install_java|bool

- name: Install Java
  apt:
    name: "{{ubuntu_java_package_name}}"
  register: java_install_result
  until: java_install_result is success  or ansible_check_mode
  retries: 10
  delay: 5
  when: install_java|bool
  tags: package

- name: Install OpenSSL
  apt:
    name: openssl
  tags: package

- name: Get Java Version
  shell: java -version
  register: version_output
  check_mode: false
  changed_when: false

- name: Print Java Version
  debug:
    msg: "Current Java Version is: {{version_output.stderr_lines[0]}}"

- name: Install pip
  apt:
    name:
      - python3-pip
    state: present
  become: true
  tags:
    - package
    - pip-package

- name: Upgrade pip
  ansible.builtin.pip:
    name: pip
    extra_args: --upgrade
  tags:
    - package
    - pip-package
  when:
    - ansible_distribution_major_version not in ['24']

- name: Install pip packages
  ansible.builtin.pip:
    name: "{{pip_packages}}"
  tags:
    - package
    - pip-package
  when:
    - ansible_distribution_major_version not in ['24']

- name: Install pip packages using apt
  apt:
    name:
      - "python3-{{item}}"
    state: present
  become: true
  loop: "{{pip_packages}}"
  tags: package
  when:
    - ansible_distribution_major_version == "24"

- name: Install pyyaml package using apt
  apt:
    name:
      - "python3-yaml"
    state: present
  become: true
  tags: package
