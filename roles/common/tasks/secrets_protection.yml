---
- name: Login to MDS server to get the encryption algorithm
  shell: |
    {{ confluent_cli_path }} login
  environment:
    CONFLUENT_PLATFORM_CA_CERT_PATH: "{{ ca_cert_path }}"
    CONFLUENT_PLATFORM_USERNAME: "{{ mds_super_user }}"
    CONFLUENT_PLATFORM_PASSWORD: "{{ mds_super_user_password }}"
    CONFLUENT_PLATFORM_MDS_URL: "{{mds_bootstrap_server_urls.split(',')[0]}}"
  register: mds_login_result
  until: mds_login_result.rc == 0
  retries: 30
  delay: 5
  when: confluent_cli_version is version('2.3', '>=') and confluent_cli_version is version('3.0', '<')

- name: Set Up Secrets Protection
  include_tasks: masterkey.yml
  run_once: true
  when:
    - secrets_protection_enabled|bool
    - not secrets_protection_masterkey
    - regenerate_masterkey|bool
  tags: masterkey

- name: Check if Config Exists ownership
  stat:
    path: "{{ config_path }}"
  register: config_stat

- name: Create Config Backup
  copy:
    src: "{{ config_path }}"
    dest: "{{ config_path }}-backup"
    remote_src: true
    mode: '640'
    owner: "{{ secrets_file_owner }}"
    group: "{{ secrets_file_group }}"
  when: config_stat.stat.exists

- name: Create Unmasked Config
  template:
    src: properties.j2
    dest: "{{ config_path }}"
    mode: '640'
    owner: "{{ secrets_file_owner }}"
    group: "{{ secrets_file_group }}"
  vars:
    # Secrets Protection CLI needs all backslashes escaped by another backslash. This filter turns \ into \\.
    properties: '{{ final_properties | regex_replace("\\", "\\\\") }}' # noqa var-naming
  diff: "{{ not mask_sensitive_diff|bool }}"

- name: Create Secrets Protection Directory
  file:
    path: "{{ ssl_file_dir_final }}"
    state: directory
    mode: '755'
  tags:
    - filesystem
    - privileged

- name: Copy security.properties file to Host
  copy:
    src: "{{ secrets_protection_security_file }}"
    dest: "{{ secrets_file }}"
    owner: "{{ secrets_file_owner }}"
    group: "{{ secrets_file_group }}"
    mode: '640'
  diff: "{{ not mask_sensitive_diff|bool }}"

- name: Load masterkey
  slurp:
    src: generated_ssl_files/masterkey
  delegate_to: localhost
  vars:
    ansible_connection: local
    ansible_become: "{{ ansible_become_localhost }}"
  register: slurped_masterkey
  when: not secrets_protection_masterkey

- name: Save Master Encryption Key
  set_fact:
    secrets_protection_masterkey: "{{ slurped_masterkey.content|b64decode}}"
  when: not secrets_protection_masterkey

- name: Create Encrypt Properties List
  set_fact:
    final_encrypt_properties: "{{ (final_properties | dict2items | map(attribute='key') | select('match', properties_patterns|join('|'))
      | list +  encrypt_properties) | unique if encrypt_passwords|bool else encrypt_properties }}"
  vars:
    properties_patterns:
      - '.*password.*'
      - '.*basic.auth.user.info.*'
      - '^ldap.java.naming.security.credentials$'
      - '^confluent.license$'
      - '.*sasl.jaas.config'

- name: Debug Properties to Mask
  debug:
    var: final_encrypt_properties
  run_once: true

- name: Encrypt Properties
  shell: |
    {{ confluent_cli_path }} secret file encrypt --config-file {{ config_path }} \
      --local-secrets-file {{ secrets_file }} \
      --remote-secrets-file {{ secrets_file }} \
      --config "{{ final_encrypt_properties | join (',') }}"
  environment:
    CONFLUENT_SECURITY_MASTER_KEY: "{{ secrets_protection_masterkey }}"
  changed_when: true
  when: final_encrypt_properties|length > 0

# If config is different than the backup, need to restart
- name: Test for Config File Changes from Backup - Trigger Handler
  copy:
    src: "{{ config_path }}"
    dest: "{{ config_path }}-backup"
    remote_src: true
    mode: '640'
    owner: "{{ secrets_file_owner }}"
    group: "{{ secrets_file_group }}"
  notify: "{{handler}}"
  when: config_stat.stat.exists

- name: Remove Backup Config
  file:
    path: "{{ config_path }}-backup"
    state: absent
  when: config_stat.stat.exists

- name: First Time Creating Config - Trigger Handler
  command: /bin/true
  notify: "{{handler}}"
  when: not config_stat.stat.exists
