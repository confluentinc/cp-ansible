---
- name: Register redactor name
  set_fact:
    redactor_name: "Redactor{{ item.logger_name | replace('.', '') }}"

# Check if the logger exists before trying to modify it
- name: Check if specific logger exists in YAML
  ansible.builtin.shell: |
    {% if item.logger_name == "Root" %}
    grep -A 10 "Root:" {{ log4j_file }}
    {% else %}
    grep -A 10 "- name: {{ item.logger_name }}" {{ log4j_file }}
    {% endif %}
  register: logger_exists
  failed_when: false
  changed_when: false

# Only proceed if the logger actually exists
- name: Add redactor appender reference to logger
  ansible.builtin.blockinfile:
    path: "{{ log4j_file }}"
    insertafter: "(?s)(\\s+{% if item.logger_name == 'Root' %}Root:{% else %}- name: {{ item.logger_name }}{% endif %}.*?AppenderRef:)"
    marker: "# {mark} ANSIBLE MANAGED REDACTOR FOR {{ item.logger_name }}"
    block: |2
          - ref: {{ redactor_name }}
  when: logger_exists.rc == 0 and logger_exists.stdout.find("ref: " + redactor_name) == -1

# Check if the redactor appender is already defined
- name: Check if Redactor appender is defined
  ansible.builtin.shell: grep -A 2 "{{ redactor_name }}:" {{ log4j_file }}
  register: redactor_defined
  failed_when: false
  changed_when: false

# Define the redactor appender in YAML format only if it doesn't exist
- name: Add Redactor appender configuration
  ansible.builtin.blockinfile:
    path: "{{ log4j_file }}"
    insertafter: "(?s)(Appenders:\\s*)"
    marker: "# {mark} ANSIBLE MANAGED REDACTOR APPENDER {{ redactor_name }}"
    block: |2
        Redactor:
          name: {{ redactor_name }}
          target: {{ item.target_appenders }}
          policy: RedactorPolicy
          policyConfig:
            className: io.confluent.log4j.redactor.RedactorPolicy
            rulesFile: {{ logredactor_rule_var }}
            {% if logredactor_policy_refresh_interval_var != '0' and logredactor_policy_refresh_interval_var != 0 %}
            refreshInterval: {{ logredactor_policy_refresh_interval_var }}
            {% endif %}
  when: redactor_defined.rc != 0