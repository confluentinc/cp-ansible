---
# More kafka_connect variables are defined in the variables role

### Boolean to reconfigure Kafka Connect's logging with the RollingFileAppender and log cleanup functionality.
kafka_connect_custom_log4j2: "{{ custom_log4j2 }}"

### Root logger level within Kafka Connect's log4j2 config. Only honored if kafka_connect_custom_log4j2: true
kafka_connect_log4j2_root_logger_level: "INFO"

### Root logger appender within Kafka Connect's log4j2 config. Only honored if kafka_connect_custom_log4j2: true
kafka_connect_log4j2_root_appenders:
  - STDOUT
  - ConnectAppender
  - RedactorAppender

### Max number of log files generated by Kafka Connect. Only honored if kafka_connect_custom_log4j2: true
kafka_connect_max_log_files: 10

### Max size of a log file generated by Kafka Connect. Only honored if kafka_connect_custom_log4j2: true
kafka_connect_log_file_size: 100MB

### List of loggers to redact. This is specified alongside the appenderRefs to be used in redactor definition.
kafka_connect_logredactor_logger_specs_list:
  - { logger_name: "Root", appenderRefs: "ConnectAppender" }

kafka_connect_oauth_urls_list: "{{ [oauth_token_uri, oauth_jwks_uri] | select('!=', 'none') | join(',') }}"

kafka_connect_oauth_urls_java_arg: "{% if not whitelist_explicit_oauth_urls|bool %}-Dorg.apache.kafka.sasl.oauthbearer.allowed.urls=*{% else %}-Dorg.apache.kafka.sasl.oauthbearer.allowed.urls={{kafka_connect_oauth_urls_list}}{% endif %}"

kafka_connect_java_args:
  - "{% if kafka_connect_ssl_enabled|bool %}-Djdk.tls.ephemeralDHKeySize=2048{% endif %}"
  - "{% if kafka_connect_jolokia_enabled|bool %}-javaagent:{{jolokia_jar_path}}=config={{kafka_connect_jolokia_config}}{% endif %}"
  - "{% if kafka_connect_jmxexporter_enabled|bool %}-javaagent:{{jmxexporter_jar_path}}={{kafka_connect_jmxexporter_port}}:{{kafka_connect_jmxexporter_config_path}}{% endif %}"
  - "{% if kafka_connect_authentication_type == 'basic' %}-Djava.security.auth.login.config={{kafka_connect.jaas_file}}{% endif %}"
  - "{% if kerberos_client_config_file_dest != '/etc/krb5.conf' %}-Djava.security.krb5.conf={{kerberos_client_config_file_dest}}{% endif %}"
  - "{% if kafka_connect_oauth_urls_list != '' %}{{ kafka_connect_oauth_urls_java_arg }}{% endif %}"

### Custom Java Args to add to the Connect Process
kafka_connect_custom_java_args: ""

kafka_connect_final_java_args: "{{ kafka_connect_java_args + [ kafka_connect_custom_java_args ] }}"

# For following dictionaries, Key/Value Pairs with empty values will not be written into override.conf

### Overrides to the Service Section of Connect Systemd File. This variable is a dictionary.
kafka_connect_service_overrides:
  LimitNOFILE: 100000
  User: "{{ kafka_connect_user if kafka_connect_user != kafka_connect_default_user else '' }}"
  Group: "{{ kafka_connect_group if kafka_connect_group != kafka_connect_default_group else '' }}"
  ExecStart: "{% if installation_method == 'archive' or kafka_connect_config_filename != kafka_connect_default_config_filename %}{{ kafka_connect.server_start_file }} {{ kafka_connect.config_file }}{% endif %}"

### Environment Variables to be added to the Connect Service. This variable is a dictionary.
kafka_connect_service_environment_overrides:
  KAFKA_HEAP_OPTS: "-Xms256M -Xmx2G"
  KAFKA_OPTS: "{{ kafka_connect_final_java_args | confluent.platform.java_arg_build_out }}"
  # Remove trailing slash if there is one
  KAFKA_LOG4J_OPTS: "{% if kafka_connect_custom_log4j2|bool %}-Dlog4j2.configurationFile=file:{{ kafka_connect.log4j_file }}{% endif %}"
  LOG_DIR: "{{ kafka_connect_log_dir|regex_replace('\\/$', '') }}"
  CONFLUENT_SECURITY_MASTER_KEY: "{% if kafka_connect_secrets_protection_enabled|bool %}{{secrets_protection_masterkey}}{% endif %}"

### Overrides to the Unit Section of Connect Systemd File. This variable is a dictionary.
kafka_connect_service_unit_overrides:

### Time in seconds to wait while deploying kafka connector
kafka_connect_deploy_connector_timeout: 30

kafka_connect_secrets_protection_file: "{{ ssl_file_dir_final }}/kafka-connect-security.properties"
