---
- name: Check if Data Directories are Formatted
  shell: "{{ binary_base_path }}/bin/kafka-storage info -c {{ kafka_controller.config_file }}"
  ignore_errors: true
  failed_when: false
  register: formatted

- name: Get ClusterId
  shell: "{{ binary_base_path }}/bin/kafka-storage random-uuid"
  environment:
    KAFKA_OPTS: "-Xlog:all=error -XX:+IgnoreUnrecognizedVMOptions"
  register: uuid_key
  run_once: true
  when: not kraft_migration|bool

- name: Extract ClusterId from meta.properties on ZK Broker
  slurp:
    src: "{{ kafka_broker_final_properties['log.dirs'].split(',')[0] }}/meta.properties"
  delegate_to: "{{ groups.kafka_broker[0] }}"
  register: zoo_cluster
  when: kraft_migration|bool

- name: Format Data Directory and Create Scram Credentials
  shell: |
    {{ binary_base_path }}/bin/kafka-storage format \
    -t={{ clusterid }} -c {{ kafka_controller.config_file }} \
    {% if 'SCRAM-SHA-512' in kafka_sasl_enabled_mechanisms or 'SCRAM-SHA-256' in kafka_sasl_enabled_mechanisms %}
    --add-scram '{% if 'SCRAM-SHA-512' in kafka_sasl_enabled_mechanisms %}SCRAM-SHA-512=[name={{ sasl_scram_users_final.admin.principal }},password={{ sasl_scram_users_final.admin.password }}]{% endif %}{% if 'SCRAM-SHA-512' in kafka_sasl_enabled_mechanisms and 'SCRAM-SHA-256' in kafka_sasl_enabled_mechanisms %},{% endif %}{% if 'SCRAM-SHA-256' in kafka_sasl_enabled_mechanisms %}SCRAM-SHA-256=[name={{ sasl_scram256_users_final.admin.principal }},password={{ sasl_scram256_users_final.admin.password }}]{% endif %}' \
    {% endif %}
    --ignore-formatted
  register: format_meta
  vars:
    clusterid: "{{ (zoo_cluster['content'] | b64decode).partition('cluster.id=')[2].partition('\n')[0] if kraft_migration|bool else uuid_key.stdout }}"
  when: formatted.rc == 1
