---
- slurp:
    src: "{{kafka_controller.config_file}}"
  register: props

- set_fact:
    properties_dict: "{{ dict((props['content'] | b64decode).split('\n')[1:-1] | map('split', '=', 1)) }}"

- set_fact:
    controller_final_properties: "{% if inventory_hostname in groups.kafka_broker %}{{properties_dict}}{% else %}{{kafka_controller_final_properties}}{% endif %}"

- name: Create Kafka Controller Config with Secrets Protection
  include_role:
    name: common
    tasks_from: secrets_protection.yml
  vars:
    final_properties: "{{ controller_final_properties }}"
    encrypt_passwords: "{{ kafka_controller_secrets_protection_encrypt_passwords }}"
    encrypt_properties: "{{ kafka_controller_secrets_protection_encrypt_properties }}"
    config_path: "{{ kafka_controller.config_file }}"
    secrets_file: "{{ kafka_controller_secrets_protection_file }}"
    secrets_file_owner: "{{ kafka_controller_user }}"
    secrets_file_group: "{{ kafka_controller_group }}"
    ca_cert_path: "{{ kafka_controller_ca_cert_path if ssl_enabled|bool else '' }}"
    handler: "restart Kafka Controller"
  tags:
    - configuration

- name: Add confluent.use.controller.listener config to Client Properties
  set_fact:
    kafka_controller_client_properties: "{{ kafka_controller_client_properties | combine(
        {
            'confluent.use.controller.listener': 'true'
        }
      ) }}"

- name: Create Kafka Controller Client Config with Secrets Protection
  include_role:
    name: common
    tasks_from: secrets_protection.yml
  vars:
    final_properties: "{{ kafka_controller_client_properties }}"
    encrypt_passwords: "{{ kafka_controller_client_secrets_protection_encrypt_passwords }}"
    encrypt_properties: "{{ kafka_controller_client_secrets_protection_encrypt_properties }}"
    config_path: "{{ kafka_controller.client_config_file}}"
    secrets_file: "{{ kafka_controller_client_secrets_protection_file }}"
    secrets_file_owner: "{{ kafka_controller_user }}"
    secrets_file_group: "{{ kafka_controller_group }}"
    ca_cert_path: "{{ kafka_controller_ca_cert_path if ssl_enabled|bool else '' }}"
    handler: "restart Kafka Controller"
  tags:
    - configuration

- name: Update system overrides with masterkey
  template:
    src: override.conf.j2
    dest: "{{ kafka_controller.systemd_override }}"
    mode: 0640
    owner: root
    group: root
  diff: "{{ not mask_sensitive_diff|bool }}"
  tags:
    - systemd

- name: Restart kafka Controller
  ansible.builtin.debug:
    msg: "restarting kafka controller"
  notify: restart Kafka Controller
  tags:
    - systemd
