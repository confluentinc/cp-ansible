---
- name: Set exporter configuration
  set_fact:
    schema_exporter_config:
      name: "{{ exporter.name }}"
      context_type: "{{ exporter.context_type | default('AUTO') }}"
      context: "{{ exporter.context | default('') }}"
      subjects: "{{ exporter.subjects | default([]) }}"
      kek_rename_format: "{{ exporter.kek_rename_format | default('') }}"
      subject_rename_format: "{{ exporter.subject_rename_format | default('') }}"
      config: "{{ schema_exporter_final_config }}"
  vars:
    base_config: "{{ exporter.config | default({}) }}"
    override_config: "{{ exporter.config_overrides | default({}) }}"
    # Transform inventory config to API format
    api_config:
      schema.registry.url: "{{ base_config.schema_registry_endpoint }}"
      basic.auth.credentials.source: "{{ 'USER_INFO' if base_config.authentication_type == 'basic' else omit }}"
      basic.auth.user.info: "{{ base_config.basic_username + ':' + base_config.basic_password if base_config.authentication_type == 'basic' else omit }}"
    schema_exporter_final_config: "{{ api_config | combine(override_config) }}"

# Shared variables for common request body fields and URI auth
- name: Set exporter variables
  set_fact:
    # Common URI authentication parameters
    exporter_uri_auth:
      validate_certs: false
      user: "{{ schema_registry_health_check_user if schema_registry_authentication_type == 'basic' else omit }}"
      password: "{{ schema_registry_health_check_password if schema_registry_authentication_type == 'basic' else omit }}"
    # Common request body fields
    exporter_body_fields:
      context_type_field: "{{ {'contextType': schema_exporter_config.context_type} if schema_exporter_config.context_type != 'AUTO' else {} }}"
      context_field: "{{ {'context': schema_exporter_config.context} if schema_exporter_config.context_type not in ['NONE', 'AUTO'] else {} }}"
      kek_rename_field: "{{ {'kekRenameFormat': schema_exporter_config.kek_rename_format} if schema_exporter_config.kek_rename_format | default('') != '' else {} }}"
      subject_rename_field: "{{ {'subjectRenameFormat': schema_exporter_config.subject_rename_format} if schema_exporter_config.subject_rename_format | default('') != '' else {} }}"

- name: Check if Schema Exporter exists
  uri:
    url: "{{ schema_registry_http_protocol }}://{{ inventory_hostname }}:{{ schema_registry_listener_port }}/exporters/{{ schema_exporter_config.name }}"
    method: GET
    status_code: [200, 404]
  args: "{{ exporter_uri_auth }}"
  register: exporter_check
  ignore_errors: true

# Pause exporter before update (only needed for existing exporters)
- name: Pause Schema Exporter
  uri:
    url: "{{ schema_registry_http_protocol }}://{{ inventory_hostname }}:{{ schema_registry_listener_port }}/exporters/{{ schema_exporter_config.name }}/pause"
    method: PUT
    status_code: [200, 202]
  args: "{{ exporter_uri_auth }}"
  register: exporter_pause
  until: exporter_pause.status in [200]
  retries: "{{ schema_registry_retries }}"
  delay: 2
  when: exporter_check.status == 200

# Create or Update Schema Exporter (POST for new, PUT for existing)
- name: Create or Update Schema Exporter
  uri:
    url: "{{ exporter_url }}"
    method: "{{ exporter_method }}"
    body_format: json
    body: "{{ exporter_request_body }}"
    status_code: 200
  args: "{{ exporter_uri_auth }}"
  vars:
    # Dynamic method and URL based on whether exporter exists
    exporter_method: "{{ 'POST' if exporter_check.status == 404 else 'PUT' }}"
    exporter_url: "{{ schema_registry_http_protocol }}://{{ inventory_hostname }}:{{ schema_registry_listener_port }}/exporters{{ '' if exporter_check.status == 404 else '/' + schema_exporter_config.name }}"
    # Dynamic request body (create includes name, update doesn't)
    base_exporter_body: "{{ {'name': schema_exporter_config.name} if exporter_check.status == 404 else {} }}"
    common_exporter_body:
      subjects: "{{ schema_exporter_config.subjects }}"
      config: "{{ schema_exporter_config.config }}"
    exporter_request_body: "{{ base_exporter_body | combine(common_exporter_body) | combine(exporter_body_fields.context_type_field) | combine(exporter_body_fields.context_field) | combine(exporter_body_fields.kek_rename_field) | combine(exporter_body_fields.subject_rename_field) }}"
  register: exporter_operation
  when: exporter_check.status in [200, 404]

# Resume exporter after update (only needed for existing exporters)
- name: Resume Schema Exporter
  uri:
    url: "{{ schema_registry_http_protocol }}://{{ inventory_hostname }}:{{ schema_registry_listener_port }}/exporters/{{ schema_exporter_config.name }}/resume"
    method: PUT
    status_code: [200, 202]
  args: "{{ exporter_uri_auth }}"
  register: exporter_resume
  when: exporter_check.status == 200

- name: Register Schema Exporter Status
  uri:
    url: "{{ schema_registry_http_protocol }}://{{ inventory_hostname }}:{{ schema_registry_listener_port }}/exporters/{{ schema_exporter_config.name }}/status"
    method: GET
    status_code: 200
  args: "{{ exporter_uri_auth }}"
  register: exporter_status_response

- name: Retrieve Schema Exporter State
  set_fact:
    schema_exporter_state: "{{ exporter_status_response.json.state }}"
    schema_exporter_configured: true
