---
- name: Copy CA Cert to Host
  copy:
    remote_src: "{{ssl_custom_certs_remote_src}}"
    src: "{{ssl_ca_cert_filepath}}"
    dest: "{{ca_cert_path}}"
    mode: 0644
  diff: "{{ not mask_sensitive_diff|bool }}"

- name: Copy Signed Cert to Host
  copy:
    remote_src: "{{ssl_custom_certs_remote_src}}"
    src: "{{ssl_signed_cert_filepath}}"
    dest: "{{ cert_path }}"
    mode: 0644

- name: Slurp Signed Cert
  slurp:
    src: "{{ cert_path }}"
  register: slurped_signed_cert

- name: Verify Cert Chain
  community.crypto.certificate_complete_chain:
    input_chain: "{{ slurped_signed_cert['content'] | b64decode }}"
    root_certificates:
      - "{{ ca_cert_path }}"
  register: custom_cert_chain

- name: Write Cert Chain
  copy:
    content: "{{ ''.join(custom_cert_chain.complete_chain) }}"
    dest: "{{ ssl_file_dir_final }}/{{ service_name }}.chain"
    mode: 0644

- name: Copy Key to Host
  copy:
    remote_src: "{{ssl_custom_certs_remote_src}}"
    src: "{{ssl_key_filepath}}"
    dest: "{{ ssl_file_dir_final }}/generation/{{service_name}}.key"
    mode: 0600
  diff: "{{ not mask_sensitive_diff|bool }}"

- name: Load Private Key
  slurp:
    src: "{{ ssl_file_dir_final }}/generation/{{service_name}}.key"
  register: slurped_private_key
  diff: "{{ not mask_sensitive_diff|bool }}"

- name: Copy Key to Final Location - Non Encrypted
  copy:
    remote_src: true
    src: "{{ ssl_file_dir_final }}/generation/{{service_name}}.key"
    dest: "{{key_path}}"
    mode: 0600
  when: "'BEGIN ENCRYPTED PRIVATE KEY' not in slurped_private_key.content|b64decode"
  diff: "{{ not mask_sensitive_diff|bool }}"

- name: Create Non Encrypted Private Key
  shell: |
    openssl rsa -in {{ ssl_file_dir_final }}/generation/{{service_name}}.key \
      -out {{key_path}} {% if ssl_key_password is defined %}-passin pass:{{ssl_key_password}} -passout pass:{{ssl_key_password}}{% endif %}
  register: decrypt_key_result
  changed_when: decrypt_key_result.rc == 0
  when: "'ENCRYPTED' in slurped_private_key.content|b64decode"
  no_log: "{{mask_secrets|bool}}"

- name: Create Keystore and Truststore from Certs
  include_tasks: create_keystores_from_certs.yml
