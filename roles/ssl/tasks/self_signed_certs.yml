---
- name: Copy CA Cert to Host
  copy:
    src: "{{ssl_self_signed_ca_cert_filepath}}"
    dest: "{{ca_cert_path}}"
    mode: '644'
  diff: "{{ not mask_sensitive_diff|bool }}"

- name: Copy CA Key to Host
  copy:
    src: "{{ssl_self_signed_ca_key_filepath}}"
    dest: "{{ca_key_path}}"
    mode: '600'
  diff: "{{ not mask_sensitive_diff|bool }}"

- name: Create Host Key
  shell: |
    openssl genrsa -out {{key_path}} {{ssl_key_size}}
  diff: "{{ not mask_sensitive_diff|bool }}"
  register: create_host_key_result
  changed_when: create_host_key_result.rc == 0

- name: Create Certificate Signing Request
  shell: |
    openssl req -new -key {{key_path}} \
      -out {{ ssl_file_dir_final }}/generation/client.csr \
      -subj '/CN={{service_name}}/OU=TEST/O=CONFLUENT/L=PaloAlto/ST=Ca/C=US'
  diff: "{{ not mask_sensitive_diff|bool }}"
  register: create_csr_result
  changed_when: create_csr_result.rc == 0

- name: Create Openssl Config for SAN
  template:
    src: openssl-san.cnf.j2
    dest: "{{ ssl_file_dir_final }}/generation/openssl-san.cnf"
    mode: '644'
  diff: "{{ not mask_sensitive_diff|bool }}"

- name: Convert certs to z/OS encoding
  when: ansible_os_family == 'OS/390'
  include_role:
    name: common
    tasks_from: zos_convert_files.yml
  vars:
    paths_to_convert:
      - "{{ca_cert_path}}"
      - "{{ca_key_path}}"
      - "{{ ssl_file_dir_final }}/generation/openssl-san.cnf"

- name: Sign CSR with the Certificate Authority
  shell: |
    openssl x509 -req -CA {{ca_cert_path}} \
      -CAkey {{ca_key_path}} \
      -in {{ ssl_file_dir_final }}/generation/client.csr \
      -out {{cert_path}} \
      -days {{keystore_expiration_days}} -CAcreateserial \
      -passin pass:{{ssl_self_signed_ca_password}} \
      -extfile {{ ssl_file_dir_final }}/generation/openssl-san.cnf \
      -extensions v3_req
  register: sign_csr_result
  changed_when: sign_csr_result.rc == 0
  no_log: "{{mask_secrets|bool}}"

- name: Build Certificate Chain
  include_tasks: build_certificate_chain.yml
  tags: build_certificate_chain

- name: Convert Cert Chain to z/OS encoding
  when: ansible_os_family == 'OS/390'
  include_role:
    name: common
    tasks_from: zos_convert_files.yml
  vars:
    paths_to_convert:
      - "{{ ssl_file_dir_final }}/{{ service_name }}.chain"

- name: Create Keystore and Truststore from Certs
  include_tasks: create_keystores_from_certs.yml
