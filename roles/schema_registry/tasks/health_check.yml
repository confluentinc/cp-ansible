---
# Cannot use Block/Rescue in Ansible Handlers: https://github.com/ansible/ansible/issues/14270
# Implementing try/catch logic with ignore_errors and conditionals
- name: Wait for API to return 200
  uri:
    url: "{{schema_registry_http_protocol}}://{{ hostvars[inventory_hostname]|confluent.platform.resolve_hostname }}:{{schema_registry_listener_port}}/subjects"
    status_code: 200
    validate_certs: false
    # Basic auth header is redundant for non rbac install
    url_username: "{{schema_registry_health_check_user}}"
    url_password: "{{schema_registry_health_check_password}}"
    force_basic_auth: true
  register: result1
  until: result1.status == 200
  retries: 30
  delay: 5
  when: schema_registry_authentication_type != 'mtls'
  ignore_errors: true

- set_fact:
    certs_chain: "{{ssl_file_dir_final}}/schema_registry.chain"

- name: Wait for API to return 200 - mTLS
  uri:
    url: "{{schema_registry_http_protocol}}://{{ hostvars[inventory_hostname]|confluent.platform.resolve_hostname }}:{{schema_registry_listener_port}}/subjects"
    status_code: 200
    validate_certs: false
    client_cert: "{{ schema_registry_cert_path if ssl_provided_keystore_and_truststore else certs_chain }}"
    client_key: "{{schema_registry_key_path}}"
    # Basic auth header is redundant for non rbac install
    url_username: "{{schema_registry_health_check_user}}"
    url_password: "{{schema_registry_health_check_password}}"
    force_basic_auth: true
  register: result2
  until: result2.status == 200
  retries: 30
  delay: 5
  when: schema_registry_authentication_type == 'mtls'
  ignore_errors: true

- name: Fetch Log Files and Error out
  block:
    - name: Fetch Files for Debugging Failure
      # Cannot use include_role in Ansible Handlers: https://github.com/ansible/ansible/issues/20493
      include_tasks: ../../common/tasks/fetch_logs.yml
      vars:
        service_name: "{{schema_registry_service_name}}"
        config_file: "{{schema_registry.config_file}}"
        log_dir: "{{schema_registry_service_environment_overrides.LOG_DIR}}"
        user: "{{schema_registry_user}}"
        group: "{{schema_registry_group}}"

    - name: Fail Provisioning
      fail:
        msg: Health checks failed. Review exported files.
  # When only one health check runs, only one will have a 'failed' field. For skipped checks, defaulting 'failed' to False
  when: result1.failed|default(False) or result2.failed|default(False)
