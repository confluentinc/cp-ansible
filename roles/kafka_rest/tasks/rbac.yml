---
- name: RBAC Setup Tasks
  import_role:
    name: common
    tasks_from: rbac_setup.yml
  vars:
    user: "{{kafka_rest_user}}"
    group: "{{kafka_rest_group}}"

- name: Grant Rest Proxy user ResourceOwner on Confluent License Topic
  uri:
    url: "{{mds_bootstrap_server_urls.split(',')[0]}}/security/1.0/principals/User:{{kafka_rest_ldap_user}}/roles/ResourceOwner/bindings"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "scope": {
          "clusters": {
            "kafka-cluster": "{{kafka_cluster_id}}"
          }
        },
        "resourcePatterns": [
          {
            "resourceType":"Topic",
            "name": "{{kafka_rest_final_properties['confluent.license.topic']}}",
            "patternType":"LITERAL"
          }
        ]
      }
    status_code: 204
  register: kr_mds_result
  until: kr_mds_result.status == 204
  retries: "{{ mds_retries }}"
  delay: 5
  when: not ansible_check_mode

### Rest Proxy user is now being set as resource owner on the monitoring interceptor topic to prevent race conditions when RBAC is enabled.

- name: Grant Rest Proxy user ResouceOwnder on the Monitoring Interceptor Topic
  uri:
    url: "{{mds_bootstrap_server_urls.split(',')[0]}}/security/1.0/principals/User:{{kafka_rest_ldap_user}}/roles/ResourceOwner/bindings"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    body: >
      {
        "scope": {
          "clusters": {
            "kafka-cluster":"{{kafka_cluster_id}}"
          }
        },
        "resourcePatterns": [{
          "resourceType": "Topic",
          "name": "{{kafka_rest_final_properties['confluent.monitoring.interceptor.topic']}}",
          "patternType":"LITERAL"
        }]
      }
    status_code: 204
  register: kr_mds_result
  until: kr_mds_result.status == 204
  retries: "{{ mds_retries }}"
  delay: 5
  when: kafka_rest_monitoring_interceptors_enabled|bool and not ansible_check_mode
