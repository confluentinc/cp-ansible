---
# More kafka_broker variables are defined in the variables role

### Boolean to reconfigure Kafka's logging with RollingFileAppender and log cleanup
kafka_broker_custom_log4j: "{{ custom_log4j }}"

### Root logger within Kafka's log4j config. Only honored if kafka_broker_custom_log4j: true
kafka_broker_log4j_root_logger: "INFO, stdout, kafkaAppender"

### Max number of log files generated by Kafka Broker. Only honored if kafka_broker_custom_log4j: true
kafka_broker_max_log_files: 10

### Max size of a log file generated by Kafka Broker. Only honored if kafka_broker_custom_log4j: true
kafka_broker_log_file_size: 100MB

### List of loggers to redact. This is specified alongside the user defined redactor name and appenderRefs to be used in redactor definition. The redactor name should be unique for each logger.
kafka_broker_logredactor_logger_specs_list:
  - { logger_name: "log4j.rootLogger", appenderRefs: "kafkaAppender" }

kafka_broker_java_args:
  - "{% if kafka_broker_listeners | confluent.platform.ssl_required(ssl_enabled) | bool %}-Djdk.tls.ephemeralDHKeySize=2048{% endif %}"
  - "{% if 'GSSAPI' in kafka_broker_sasl_enabled_mechanisms or zookeeper_client_authentication_type in ['kerberos', 'digest'] or
        (kafka_broker_rest_proxy_enabled and (not rbac_enabled or (rbac_enabled and external_mds_enabled)) and kafka_broker_rest_proxy_authentication_type == 'basic') %}-Djava.security.auth.login.config={{kafka_broker.jaas_file}}{% endif %}"
  - "{% if kafka_broker_jolokia_enabled|bool %}-javaagent:{{jolokia_jar_path}}=config={{kafka_broker_jolokia_config}}{% endif %}"
  - "{% if kafka_broker_jmxexporter_enabled|bool %}-javaagent:{{jmxexporter_jar_path}}={{kafka_broker_jmxexporter_port}}:{{kafka_broker_jmxexporter_config_path}}{% endif %}"
  - "{% if zookeeper_client_authentication_type == 'kerberos' and zookeeper_kerberos_primary != 'zookeeper' %}-Dzookeeper.sasl.client.username={{zookeeper_kerberos_primary}}{% endif %}"
  - "{% if fips_enabled %}-Djdk.tls.namedGroups='secp256r1,secp384r1,ffdhe2048,ffdhe3072'{% endif %}"
  - "{% if kerberos_client_config_file_dest != '/etc/krb5.conf' %}-Djava.security.krb5.conf={{kerberos_client_config_file_dest}}{% endif %}"

# Strip primary from the zookeeper principal on first zk host. Adds defaults for if there is not even a zookeeper group
zookeeper_kerberos_primary: "{{ (hostvars[ groups['zookeeper'][0] | default('zookeeper') ] | default({})) ['zookeeper_kerberos_principal'] | default('zookeeper/host@EXAMPLE>COM') | regex_replace('/.*') }}"

### Custom Java Args to add to the Kafka Process
kafka_broker_custom_java_args: ""

kafka_broker_final_java_args: "{{ kafka_broker_java_args + [ kafka_broker_custom_java_args ] }}"

# For following dictionaries, Key/Value Pairs with empty values will not be written into override.conf

### Overrides to the Service Section of Kafka Systemd File. This variable is a dictionary.
kafka_broker_service_overrides:
  User: "{{ kafka_broker_user if kafka_broker_user != kafka_broker_default_user else '' }}"
  Group: "{{ kafka_broker_group if kafka_broker_group != kafka_broker_default_group else '' }}"
  ExecStart: "{% if installation_method == 'archive' %}{{ kafka_broker.server_start_file }} {{ kafka_broker.config_file }}{% endif %}"

### Environment Variables to be added to the Kafka Service. This variable is a dictionary.
kafka_broker_service_environment_overrides:
  KAFKA_HEAP_OPTS: "-Xms6g -Xmx6g -XX:MetaspaceSize=96m -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:G1HeapRegionSize=16M -XX:MinMetaspaceFreeRatio=50 -XX:MaxMetaspaceFreeRatio=80"
  KAFKA_OPTS: "{{ kafka_broker_final_java_args | confluent.platform.java_arg_build_out }}"
  # Remove trailing slash if there is one
  KAFKA_LOG4J_OPTS: "{% if kafka_broker_custom_log4j|bool %}-Dlog4j.configuration=file:{{ kafka_broker.log4j_file }}{% endif %}"
  LOG_DIR: "{{ kafka_broker_log_dir|regex_replace('\\/$', '') }}"
  CONFLUENT_SECURITY_MASTER_KEY: "{% if kafka_broker_secrets_protection_enabled|bool %}{{secrets_protection_masterkey}}{% endif %}"

### Overrides to the Unit Section of Kafka Systemd File. This variable is a dictionary.
kafka_broker_service_unit_overrides:

kafka_broker_sysctl:
  vm.swappiness: 1
  vm.dirty_background_ratio: 5
  vm.dirty_ratio: 80
  vm.max_map_count: 262144

kafka_broker_sysctl_file: /usr/lib/sysctl.d/sysctl.conf

### Time in seconds to wait before starting Kafka Health Checks.
kafka_broker_health_check_delay: 20

kafka_broker_secrets_protection_file: "{{ ssl_file_dir_final }}/kafka-broker-security.properties"

kafka_broker_client_secrets_protection_file: "{{ ssl_file_dir_final }}/kafka-broker-client-security.properties"

### Time in seconds to wait before JMX exporter starts serving metrics. Any requests within the delay period will result in an empty metrics set.
kafka_broker_jmxexporter_startup_delay: 60

### Whether to cache bean name expressions to rule computation (match and mismatch). Not recommended for rules matching on bean value, as only the value from the first scrape will be cached and re-used. This can increase performance when collecting a lot of mbeans.
kafka_broker_jmxexporter_bean_name_expressions_cache: false
